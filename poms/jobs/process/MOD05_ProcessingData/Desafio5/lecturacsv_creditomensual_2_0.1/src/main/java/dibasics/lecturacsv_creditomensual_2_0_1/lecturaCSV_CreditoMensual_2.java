// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package dibasics.lecturacsv_creditomensual_2_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: lecturaCSV_CreditoMensual_2 Purpose: .<br>
 * Description: . <br>
 * 
 * @author user@talend.com
 * @version 7.3.1.20200219_1130
 * @status
 */
public class lecturaCSV_CreditoMensual_2 implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "lecturaCSV_CreditoMensual_2";
	private final String projectName = "DIBASICS";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					lecturaCSV_CreditoMensual_2.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(lecturaCSV_CreditoMensual_2.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tDBInput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputDelimited_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFilterRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSampleRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputJSON_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputDelimited_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSortRow_1_SortOut_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		tSortRow_1_SortIn_error(exception, errorComponent, globalMap);

	}

	public void tSortRow_1_SortIn_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tSortRow_2_SortOut_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		tSortRow_2_SortIn_error(exception, errorComponent, globalMap);

	}

	public void tSortRow_2_SortIn_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public double presupuesto;

		public double getPresupuesto() {
			return this.presupuesto;
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.presupuesto = dis.readDouble();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// double

				dos.writeDouble(this.presupuesto);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("presupuesto=" + String.valueOf(presupuesto));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row8Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public double presupuesto;

		public double getPresupuesto() {
			return this.presupuesto;
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.presupuesto = dis.readDouble();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// double

				dos.writeDouble(this.presupuesto);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("presupuesto=" + String.valueOf(presupuesto));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row7Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class OnRowsEndStructtSortRow_2
			implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_2> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public double presupuesto;

		public double getPresupuesto() {
			return this.presupuesto;
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.presupuesto = dis.readDouble();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// double

				dos.writeDouble(this.presupuesto);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("presupuesto=" + String.valueOf(presupuesto));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(OnRowsEndStructtSortRow_2 other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row6Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row4Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class OnRowsEndStructtSortRow_1
			implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(OnRowsEndStructtSortRow_1 other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class creditoComprometidoStruct
			implements routines.system.IPersistableRow<creditoComprometidoStruct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(creditoComprometidoStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class creditoRestanteStruct implements routines.system.IPersistableRow<creditoRestanteStruct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Double creditoRestante;

		public Double getCreditoRestante() {
			return this.creditoRestante;
		}

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.creditoRestante = null;
					} else {
						this.creditoRestante = dis.readDouble();
					}

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Double

				if (this.creditoRestante == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.creditoRestante);
				}

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("creditoRestante=" + String.valueOf(creditoRestante));
			sb.append(",impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(creditoRestanteStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class clasificadorStruct implements routines.system.IPersistableRow<clasificadorStruct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public double presupuesto;

		public double getPresupuesto() {
			return this.presupuesto;
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.presupuesto = dis.readDouble();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// double

				dos.writeDouble(this.presupuesto);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("presupuesto=" + String.valueOf(presupuesto));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(clasificadorStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];
		static byte[] commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[0];

		public Integer impacto_presupuestario_anio;

		public Integer getImpacto_presupuestario_anio() {
			return this.impacto_presupuestario_anio;
		}

		public Integer impacto_presupuestario_mes;

		public Integer getImpacto_presupuestario_mes() {
			return this.impacto_presupuestario_mes;
		}

		public Integer ejercicio_presupuestario;

		public Integer getEjercicio_presupuestario() {
			return this.ejercicio_presupuestario;
		}

		public Integer sector_id;

		public Integer getSector_id() {
			return this.sector_id;
		}

		public String sector_desc;

		public String getSector_desc() {
			return this.sector_desc;
		}

		public Integer subsector_id;

		public Integer getSubsector_id() {
			return this.subsector_id;
		}

		public String subsector_desc;

		public String getSubsector_desc() {
			return this.subsector_desc;
		}

		public Integer caracter_id;

		public Integer getCaracter_id() {
			return this.caracter_id;
		}

		public String caracter_desc;

		public String getCaracter_desc() {
			return this.caracter_desc;
		}

		public Integer jurisdiccion_id;

		public Integer getJurisdiccion_id() {
			return this.jurisdiccion_id;
		}

		public String jurisdiccion_desc;

		public String getJurisdiccion_desc() {
			return this.jurisdiccion_desc;
		}

		public Integer subjurisdiccion_id;

		public Integer getSubjurisdiccion_id() {
			return this.subjurisdiccion_id;
		}

		public String subjurisdiccion_desc;

		public String getSubjurisdiccion_desc() {
			return this.subjurisdiccion_desc;
		}

		public Integer entidad_id;

		public Integer getEntidad_id() {
			return this.entidad_id;
		}

		public String entidad_desc;

		public String getEntidad_desc() {
			return this.entidad_desc;
		}

		public Integer servicio_id;

		public Integer getServicio_id() {
			return this.servicio_id;
		}

		public String servicio_desc;

		public String getServicio_desc() {
			return this.servicio_desc;
		}

		public Integer programa_id;

		public Integer getPrograma_id() {
			return this.programa_id;
		}

		public String programa_desc;

		public String getPrograma_desc() {
			return this.programa_desc;
		}

		public Integer subprograma_id;

		public Integer getSubprograma_id() {
			return this.subprograma_id;
		}

		public String subprograma_desc;

		public String getSubprograma_desc() {
			return this.subprograma_desc;
		}

		public Integer proyecto_id;

		public Integer getProyecto_id() {
			return this.proyecto_id;
		}

		public String proyecto_desc;

		public String getProyecto_desc() {
			return this.proyecto_desc;
		}

		public Integer actividad_id;

		public Integer getActividad_id() {
			return this.actividad_id;
		}

		public String actividad_desc;

		public String getActividad_desc() {
			return this.actividad_desc;
		}

		public Integer obra_id;

		public Integer getObra_id() {
			return this.obra_id;
		}

		public String obra_desc;

		public String getObra_desc() {
			return this.obra_desc;
		}

		public Integer finalidad_id;

		public Integer getFinalidad_id() {
			return this.finalidad_id;
		}

		public String finalidad_desc;

		public String getFinalidad_desc() {
			return this.finalidad_desc;
		}

		public Integer funcion_id;

		public Integer getFuncion_id() {
			return this.funcion_id;
		}

		public String funcion_desc;

		public String getFuncion_desc() {
			return this.funcion_desc;
		}

		public Integer inciso_id;

		public Integer getInciso_id() {
			return this.inciso_id;
		}

		public String inciso_desc;

		public String getInciso_desc() {
			return this.inciso_desc;
		}

		public Integer principal_id;

		public Integer getPrincipal_id() {
			return this.principal_id;
		}

		public String principal_desc;

		public String getPrincipal_desc() {
			return this.principal_desc;
		}

		public Integer parcial_id;

		public Integer getParcial_id() {
			return this.parcial_id;
		}

		public String parcial_desc;

		public String getParcial_desc() {
			return this.parcial_desc;
		}

		public Integer subparcial_id;

		public Integer getSubparcial_id() {
			return this.subparcial_id;
		}

		public String subparcial_desc;

		public String getSubparcial_desc() {
			return this.subparcial_desc;
		}

		public Integer clasificador_economico_8_digitos_id;

		public Integer getClasificador_economico_8_digitos_id() {
			return this.clasificador_economico_8_digitos_id;
		}

		public String clasificador_economico_8_digitos_desc;

		public String getClasificador_economico_8_digitos_desc() {
			return this.clasificador_economico_8_digitos_desc;
		}

		public Double fuente_financiamiento_id;

		public Double getFuente_financiamiento_id() {
			return this.fuente_financiamiento_id;
		}

		public String fuente_financiamiento_desc;

		public String getFuente_financiamiento_desc() {
			return this.fuente_financiamiento_desc;
		}

		public Integer ubicacion_geografica_id;

		public Integer getUbicacion_geografica_id() {
			return this.ubicacion_geografica_id;
		}

		public String ubicacion_geografica_desc;

		public String getUbicacion_geografica_desc() {
			return this.ubicacion_geografica_desc;
		}

		public Integer unidad_ejecutora_id;

		public Integer getUnidad_ejecutora_id() {
			return this.unidad_ejecutora_id;
		}

		public String unidad_ejecutora_desc;

		public String getUnidad_ejecutora_desc() {
			return this.unidad_ejecutora_desc;
		}

		public Integer prestamo_externo_id;

		public Integer getPrestamo_externo_id() {
			return this.prestamo_externo_id;
		}

		public String prestamo_externo_desc;

		public String getPrestamo_externo_desc() {
			return this.prestamo_externo_desc;
		}

		public Integer codigo_bapin_id;

		public Integer getCodigo_bapin_id() {
			return this.codigo_bapin_id;
		}

		public String codigo_bapin_desc;

		public String getCodigo_bapin_desc() {
			return this.codigo_bapin_desc;
		}

		public String credito_presupuestado;

		public String getCredito_presupuestado() {
			return this.credito_presupuestado;
		}

		public String credito_vigente;

		public String getCredito_vigente() {
			return this.credito_vigente;
		}

		public String credito_comprometido;

		public String getCredito_comprometido() {
			return this.credito_comprometido;
		}

		public String credito_devengado;

		public String getCredito_devengado() {
			return this.credito_devengado;
		}

		public String credito_pagado;

		public String getCredito_pagado() {
			return this.credito_pagado;
		}

		public String ultima_actualizacion_fecha;

		public String getUltima_actualizacion_fecha() {
			return this.ultima_actualizacion_fecha;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length) {
					if (length < 1024 && commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2.length == 0) {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[1024];
					} else {
						commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2 = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length);
				strReturn = new String(commonByteArray_DIBASICS_lecturaCSV_CreditoMensual_2, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DIBASICS_lecturaCSV_CreditoMensual_2) {

				try {

					int length = 0;

					this.impacto_presupuestario_anio = readInteger(dis);

					this.impacto_presupuestario_mes = readInteger(dis);

					this.ejercicio_presupuestario = readInteger(dis);

					this.sector_id = readInteger(dis);

					this.sector_desc = readString(dis);

					this.subsector_id = readInteger(dis);

					this.subsector_desc = readString(dis);

					this.caracter_id = readInteger(dis);

					this.caracter_desc = readString(dis);

					this.jurisdiccion_id = readInteger(dis);

					this.jurisdiccion_desc = readString(dis);

					this.subjurisdiccion_id = readInteger(dis);

					this.subjurisdiccion_desc = readString(dis);

					this.entidad_id = readInteger(dis);

					this.entidad_desc = readString(dis);

					this.servicio_id = readInteger(dis);

					this.servicio_desc = readString(dis);

					this.programa_id = readInteger(dis);

					this.programa_desc = readString(dis);

					this.subprograma_id = readInteger(dis);

					this.subprograma_desc = readString(dis);

					this.proyecto_id = readInteger(dis);

					this.proyecto_desc = readString(dis);

					this.actividad_id = readInteger(dis);

					this.actividad_desc = readString(dis);

					this.obra_id = readInteger(dis);

					this.obra_desc = readString(dis);

					this.finalidad_id = readInteger(dis);

					this.finalidad_desc = readString(dis);

					this.funcion_id = readInteger(dis);

					this.funcion_desc = readString(dis);

					this.inciso_id = readInteger(dis);

					this.inciso_desc = readString(dis);

					this.principal_id = readInteger(dis);

					this.principal_desc = readString(dis);

					this.parcial_id = readInteger(dis);

					this.parcial_desc = readString(dis);

					this.subparcial_id = readInteger(dis);

					this.subparcial_desc = readString(dis);

					this.clasificador_economico_8_digitos_id = readInteger(dis);

					this.clasificador_economico_8_digitos_desc = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.fuente_financiamiento_id = null;
					} else {
						this.fuente_financiamiento_id = dis.readDouble();
					}

					this.fuente_financiamiento_desc = readString(dis);

					this.ubicacion_geografica_id = readInteger(dis);

					this.ubicacion_geografica_desc = readString(dis);

					this.unidad_ejecutora_id = readInteger(dis);

					this.unidad_ejecutora_desc = readString(dis);

					this.prestamo_externo_id = readInteger(dis);

					this.prestamo_externo_desc = readString(dis);

					this.codigo_bapin_id = readInteger(dis);

					this.codigo_bapin_desc = readString(dis);

					this.credito_presupuestado = readString(dis);

					this.credito_vigente = readString(dis);

					this.credito_comprometido = readString(dis);

					this.credito_devengado = readString(dis);

					this.credito_pagado = readString(dis);

					this.ultima_actualizacion_fecha = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.impacto_presupuestario_anio, dos);

				// Integer

				writeInteger(this.impacto_presupuestario_mes, dos);

				// Integer

				writeInteger(this.ejercicio_presupuestario, dos);

				// Integer

				writeInteger(this.sector_id, dos);

				// String

				writeString(this.sector_desc, dos);

				// Integer

				writeInteger(this.subsector_id, dos);

				// String

				writeString(this.subsector_desc, dos);

				// Integer

				writeInteger(this.caracter_id, dos);

				// String

				writeString(this.caracter_desc, dos);

				// Integer

				writeInteger(this.jurisdiccion_id, dos);

				// String

				writeString(this.jurisdiccion_desc, dos);

				// Integer

				writeInteger(this.subjurisdiccion_id, dos);

				// String

				writeString(this.subjurisdiccion_desc, dos);

				// Integer

				writeInteger(this.entidad_id, dos);

				// String

				writeString(this.entidad_desc, dos);

				// Integer

				writeInteger(this.servicio_id, dos);

				// String

				writeString(this.servicio_desc, dos);

				// Integer

				writeInteger(this.programa_id, dos);

				// String

				writeString(this.programa_desc, dos);

				// Integer

				writeInteger(this.subprograma_id, dos);

				// String

				writeString(this.subprograma_desc, dos);

				// Integer

				writeInteger(this.proyecto_id, dos);

				// String

				writeString(this.proyecto_desc, dos);

				// Integer

				writeInteger(this.actividad_id, dos);

				// String

				writeString(this.actividad_desc, dos);

				// Integer

				writeInteger(this.obra_id, dos);

				// String

				writeString(this.obra_desc, dos);

				// Integer

				writeInteger(this.finalidad_id, dos);

				// String

				writeString(this.finalidad_desc, dos);

				// Integer

				writeInteger(this.funcion_id, dos);

				// String

				writeString(this.funcion_desc, dos);

				// Integer

				writeInteger(this.inciso_id, dos);

				// String

				writeString(this.inciso_desc, dos);

				// Integer

				writeInteger(this.principal_id, dos);

				// String

				writeString(this.principal_desc, dos);

				// Integer

				writeInteger(this.parcial_id, dos);

				// String

				writeString(this.parcial_desc, dos);

				// Integer

				writeInteger(this.subparcial_id, dos);

				// String

				writeString(this.subparcial_desc, dos);

				// Integer

				writeInteger(this.clasificador_economico_8_digitos_id, dos);

				// String

				writeString(this.clasificador_economico_8_digitos_desc, dos);

				// Double

				if (this.fuente_financiamiento_id == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.fuente_financiamiento_id);
				}

				// String

				writeString(this.fuente_financiamiento_desc, dos);

				// Integer

				writeInteger(this.ubicacion_geografica_id, dos);

				// String

				writeString(this.ubicacion_geografica_desc, dos);

				// Integer

				writeInteger(this.unidad_ejecutora_id, dos);

				// String

				writeString(this.unidad_ejecutora_desc, dos);

				// Integer

				writeInteger(this.prestamo_externo_id, dos);

				// String

				writeString(this.prestamo_externo_desc, dos);

				// Integer

				writeInteger(this.codigo_bapin_id, dos);

				// String

				writeString(this.codigo_bapin_desc, dos);

				// String

				writeString(this.credito_presupuestado, dos);

				// String

				writeString(this.credito_vigente, dos);

				// String

				writeString(this.credito_comprometido, dos);

				// String

				writeString(this.credito_devengado, dos);

				// String

				writeString(this.credito_pagado, dos);

				// String

				writeString(this.ultima_actualizacion_fecha, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("impacto_presupuestario_anio=" + String.valueOf(impacto_presupuestario_anio));
			sb.append(",impacto_presupuestario_mes=" + String.valueOf(impacto_presupuestario_mes));
			sb.append(",ejercicio_presupuestario=" + String.valueOf(ejercicio_presupuestario));
			sb.append(",sector_id=" + String.valueOf(sector_id));
			sb.append(",sector_desc=" + sector_desc);
			sb.append(",subsector_id=" + String.valueOf(subsector_id));
			sb.append(",subsector_desc=" + subsector_desc);
			sb.append(",caracter_id=" + String.valueOf(caracter_id));
			sb.append(",caracter_desc=" + caracter_desc);
			sb.append(",jurisdiccion_id=" + String.valueOf(jurisdiccion_id));
			sb.append(",jurisdiccion_desc=" + jurisdiccion_desc);
			sb.append(",subjurisdiccion_id=" + String.valueOf(subjurisdiccion_id));
			sb.append(",subjurisdiccion_desc=" + subjurisdiccion_desc);
			sb.append(",entidad_id=" + String.valueOf(entidad_id));
			sb.append(",entidad_desc=" + entidad_desc);
			sb.append(",servicio_id=" + String.valueOf(servicio_id));
			sb.append(",servicio_desc=" + servicio_desc);
			sb.append(",programa_id=" + String.valueOf(programa_id));
			sb.append(",programa_desc=" + programa_desc);
			sb.append(",subprograma_id=" + String.valueOf(subprograma_id));
			sb.append(",subprograma_desc=" + subprograma_desc);
			sb.append(",proyecto_id=" + String.valueOf(proyecto_id));
			sb.append(",proyecto_desc=" + proyecto_desc);
			sb.append(",actividad_id=" + String.valueOf(actividad_id));
			sb.append(",actividad_desc=" + actividad_desc);
			sb.append(",obra_id=" + String.valueOf(obra_id));
			sb.append(",obra_desc=" + obra_desc);
			sb.append(",finalidad_id=" + String.valueOf(finalidad_id));
			sb.append(",finalidad_desc=" + finalidad_desc);
			sb.append(",funcion_id=" + String.valueOf(funcion_id));
			sb.append(",funcion_desc=" + funcion_desc);
			sb.append(",inciso_id=" + String.valueOf(inciso_id));
			sb.append(",inciso_desc=" + inciso_desc);
			sb.append(",principal_id=" + String.valueOf(principal_id));
			sb.append(",principal_desc=" + principal_desc);
			sb.append(",parcial_id=" + String.valueOf(parcial_id));
			sb.append(",parcial_desc=" + parcial_desc);
			sb.append(",subparcial_id=" + String.valueOf(subparcial_id));
			sb.append(",subparcial_desc=" + subparcial_desc);
			sb.append(",clasificador_economico_8_digitos_id=" + String.valueOf(clasificador_economico_8_digitos_id));
			sb.append(",clasificador_economico_8_digitos_desc=" + clasificador_economico_8_digitos_desc);
			sb.append(",fuente_financiamiento_id=" + String.valueOf(fuente_financiamiento_id));
			sb.append(",fuente_financiamiento_desc=" + fuente_financiamiento_desc);
			sb.append(",ubicacion_geografica_id=" + String.valueOf(ubicacion_geografica_id));
			sb.append(",ubicacion_geografica_desc=" + ubicacion_geografica_desc);
			sb.append(",unidad_ejecutora_id=" + String.valueOf(unidad_ejecutora_id));
			sb.append(",unidad_ejecutora_desc=" + unidad_ejecutora_desc);
			sb.append(",prestamo_externo_id=" + String.valueOf(prestamo_externo_id));
			sb.append(",prestamo_externo_desc=" + prestamo_externo_desc);
			sb.append(",codigo_bapin_id=" + String.valueOf(codigo_bapin_id));
			sb.append(",codigo_bapin_desc=" + codigo_bapin_desc);
			sb.append(",credito_presupuestado=" + credito_presupuestado);
			sb.append(",credito_vigente=" + credito_vigente);
			sb.append(",credito_comprometido=" + credito_comprometido);
			sb.append(",credito_devengado=" + credito_devengado);
			sb.append(",credito_pagado=" + credito_pagado);
			sb.append(",ultima_actualizacion_fecha=" + ultima_actualizacion_fecha);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;
		String currentVirtualComponent = null;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row1Struct row1 = new row1Struct();
				creditoComprometidoStruct creditoComprometido = new creditoComprometidoStruct();
				creditoComprometidoStruct row2 = creditoComprometido;
				creditoRestanteStruct creditoRestante = new creditoRestanteStruct();
				row3Struct row3 = new row3Struct();
				row4Struct row4 = new row4Struct();
				row5Struct row5 = new row5Struct();
				row5Struct row6 = row5;
				clasificadorStruct clasificador = new clasificadorStruct();
				row7Struct row7 = new row7Struct();
				row7Struct row8 = row7;

				/**
				 * [tFileOutputDelimited_1 begin ] start
				 */

				ok_Hash.put("tFileOutputDelimited_1", false);
				start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				currentComponent = "tFileOutputDelimited_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row2");
				}

				int tos_count_tFileOutputDelimited_1 = 0;

				String fileName_tFileOutputDelimited_1 = "";
				fileName_tFileOutputDelimited_1 = (new java.io.File(
						"C:/Users/FamiliaNatelloMedina/Documents/UNLu/AYI ACADEMI/Modulo 5/SALIDA/ProcessingData/creditoComprometido.csv"))
								.getAbsolutePath().replace("\\", "/");
				String fullName_tFileOutputDelimited_1 = null;
				String extension_tFileOutputDelimited_1 = null;
				String directory_tFileOutputDelimited_1 = null;
				if ((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1
							.lastIndexOf("/")) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					}
					directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
							fileName_tFileOutputDelimited_1.lastIndexOf("/"));
				} else {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					}
					directory_tFileOutputDelimited_1 = "";
				}
				boolean isFileGenerated_tFileOutputDelimited_1 = true;
				java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);
				int nb_line_tFileOutputDelimited_1 = 0;
				int splitedFileNo_tFileOutputDelimited_1 = 0;
				int currentRow_tFileOutputDelimited_1 = 0;

				final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */
						","/** End field tFileOutputDelimited_1:FIELDSEPARATOR */
				;

				final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /**
																		 * Start field
																		 * tFileOutputDelimited_1:ROWSEPARATOR
																		 */
						"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */
				;

				// create directory only if not exists
				if (directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
					java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
					if (!dir_tFileOutputDelimited_1.exists()) {
						dir_tFileOutputDelimited_1.mkdirs();
					}
				}

				// routines.system.Row
				java.io.Writer outtFileOutputDelimited_1 = null;

				java.io.File fileToDelete_tFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				if (fileToDelete_tFileOutputDelimited_1.exists()) {
					fileToDelete_tFileOutputDelimited_1.delete();
				}
				outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
						new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, false), "ISO-8859-15"));
				if (filetFileOutputDelimited_1.length() == 0) {
					outtFileOutputDelimited_1.write("impacto_presupuestario_anio");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("impacto_presupuestario_mes");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("ejercicio_presupuestario");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("sector_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("sector_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subsector_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subsector_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("caracter_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("caracter_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("jurisdiccion_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("jurisdiccion_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subjurisdiccion_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subjurisdiccion_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("entidad_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("entidad_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("servicio_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("servicio_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("programa_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("programa_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subprograma_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subprograma_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("proyecto_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("proyecto_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("actividad_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("actividad_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("obra_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("obra_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("finalidad_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("finalidad_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("funcion_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("funcion_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("inciso_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("inciso_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("principal_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("principal_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("parcial_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("parcial_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subparcial_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("subparcial_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("clasificador_economico_8_digitos_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("clasificador_economico_8_digitos_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("fuente_financiamiento_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("fuente_financiamiento_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("ubicacion_geografica_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("ubicacion_geografica_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("unidad_ejecutora_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("unidad_ejecutora_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("prestamo_externo_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("prestamo_externo_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("codigo_bapin_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("codigo_bapin_desc");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("credito_presupuestado");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("credito_vigente");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("credito_comprometido");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("credito_devengado");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("credito_pagado");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("ultima_actualizacion_fecha");
					outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.flush();
				}

				resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
				resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

				/**
				 * [tFileOutputDelimited_1 begin ] stop
				 */

				/**
				 * [tLogRow_1 begin ] start
				 */

				ok_Hash.put("tLogRow_1", false);
				start_Hash.put("tLogRow_1", System.currentTimeMillis());

				currentComponent = "tLogRow_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "creditoComprometido");
				}

				int tos_count_tLogRow_1 = 0;

				///////////////////////

				class Util_tLogRow_1 {

					String[] des_top = { ".", ".", "-", "+" };

					String[] des_head = { "|=", "=|", "-", "+" };

					String[] des_bottom = { "'", "'", "-", "+" };

					String name = "";

					java.util.List<String[]> list = new java.util.ArrayList<String[]>();

					int[] colLengths = new int[57];

					public void addRow(String[] row) {

						for (int i = 0; i < 57; i++) {
							if (row[i] != null) {
								colLengths[i] = Math.max(colLengths[i], row[i].length());
							}
						}
						list.add(row);
					}

					public void setTableName(String name) {

						this.name = name;
					}

					public StringBuilder format() {

						StringBuilder sb = new StringBuilder();

						sb.append(print(des_top));

						int totals = 0;
						for (int i = 0; i < colLengths.length; i++) {
							totals = totals + colLengths[i];
						}

						// name
						sb.append("|");
						int k = 0;
						for (k = 0; k < (totals + 56 - name.length()) / 2; k++) {
							sb.append(' ');
						}
						sb.append(name);
						for (int i = 0; i < totals + 56 - name.length() - k; i++) {
							sb.append(' ');
						}
						sb.append("|\n");

						// head and rows
						sb.append(print(des_head));
						for (int i = 0; i < list.size(); i++) {

							String[] row = list.get(i);

							java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());

							StringBuilder sbformat = new StringBuilder();
							sbformat.append("|%1$-");
							sbformat.append(colLengths[0]);
							sbformat.append("s");

							sbformat.append("|%2$-");
							sbformat.append(colLengths[1]);
							sbformat.append("s");

							sbformat.append("|%3$-");
							sbformat.append(colLengths[2]);
							sbformat.append("s");

							sbformat.append("|%4$-");
							sbformat.append(colLengths[3]);
							sbformat.append("s");

							sbformat.append("|%5$-");
							sbformat.append(colLengths[4]);
							sbformat.append("s");

							sbformat.append("|%6$-");
							sbformat.append(colLengths[5]);
							sbformat.append("s");

							sbformat.append("|%7$-");
							sbformat.append(colLengths[6]);
							sbformat.append("s");

							sbformat.append("|%8$-");
							sbformat.append(colLengths[7]);
							sbformat.append("s");

							sbformat.append("|%9$-");
							sbformat.append(colLengths[8]);
							sbformat.append("s");

							sbformat.append("|%10$-");
							sbformat.append(colLengths[9]);
							sbformat.append("s");

							sbformat.append("|%11$-");
							sbformat.append(colLengths[10]);
							sbformat.append("s");

							sbformat.append("|%12$-");
							sbformat.append(colLengths[11]);
							sbformat.append("s");

							sbformat.append("|%13$-");
							sbformat.append(colLengths[12]);
							sbformat.append("s");

							sbformat.append("|%14$-");
							sbformat.append(colLengths[13]);
							sbformat.append("s");

							sbformat.append("|%15$-");
							sbformat.append(colLengths[14]);
							sbformat.append("s");

							sbformat.append("|%16$-");
							sbformat.append(colLengths[15]);
							sbformat.append("s");

							sbformat.append("|%17$-");
							sbformat.append(colLengths[16]);
							sbformat.append("s");

							sbformat.append("|%18$-");
							sbformat.append(colLengths[17]);
							sbformat.append("s");

							sbformat.append("|%19$-");
							sbformat.append(colLengths[18]);
							sbformat.append("s");

							sbformat.append("|%20$-");
							sbformat.append(colLengths[19]);
							sbformat.append("s");

							sbformat.append("|%21$-");
							sbformat.append(colLengths[20]);
							sbformat.append("s");

							sbformat.append("|%22$-");
							sbformat.append(colLengths[21]);
							sbformat.append("s");

							sbformat.append("|%23$-");
							sbformat.append(colLengths[22]);
							sbformat.append("s");

							sbformat.append("|%24$-");
							sbformat.append(colLengths[23]);
							sbformat.append("s");

							sbformat.append("|%25$-");
							sbformat.append(colLengths[24]);
							sbformat.append("s");

							sbformat.append("|%26$-");
							sbformat.append(colLengths[25]);
							sbformat.append("s");

							sbformat.append("|%27$-");
							sbformat.append(colLengths[26]);
							sbformat.append("s");

							sbformat.append("|%28$-");
							sbformat.append(colLengths[27]);
							sbformat.append("s");

							sbformat.append("|%29$-");
							sbformat.append(colLengths[28]);
							sbformat.append("s");

							sbformat.append("|%30$-");
							sbformat.append(colLengths[29]);
							sbformat.append("s");

							sbformat.append("|%31$-");
							sbformat.append(colLengths[30]);
							sbformat.append("s");

							sbformat.append("|%32$-");
							sbformat.append(colLengths[31]);
							sbformat.append("s");

							sbformat.append("|%33$-");
							sbformat.append(colLengths[32]);
							sbformat.append("s");

							sbformat.append("|%34$-");
							sbformat.append(colLengths[33]);
							sbformat.append("s");

							sbformat.append("|%35$-");
							sbformat.append(colLengths[34]);
							sbformat.append("s");

							sbformat.append("|%36$-");
							sbformat.append(colLengths[35]);
							sbformat.append("s");

							sbformat.append("|%37$-");
							sbformat.append(colLengths[36]);
							sbformat.append("s");

							sbformat.append("|%38$-");
							sbformat.append(colLengths[37]);
							sbformat.append("s");

							sbformat.append("|%39$-");
							sbformat.append(colLengths[38]);
							sbformat.append("s");

							sbformat.append("|%40$-");
							sbformat.append(colLengths[39]);
							sbformat.append("s");

							sbformat.append("|%41$-");
							sbformat.append(colLengths[40]);
							sbformat.append("s");

							sbformat.append("|%42$-");
							sbformat.append(colLengths[41]);
							sbformat.append("s");

							sbformat.append("|%43$-");
							sbformat.append(colLengths[42]);
							sbformat.append("s");

							sbformat.append("|%44$-");
							sbformat.append(colLengths[43]);
							sbformat.append("s");

							sbformat.append("|%45$-");
							sbformat.append(colLengths[44]);
							sbformat.append("s");

							sbformat.append("|%46$-");
							sbformat.append(colLengths[45]);
							sbformat.append("s");

							sbformat.append("|%47$-");
							sbformat.append(colLengths[46]);
							sbformat.append("s");

							sbformat.append("|%48$-");
							sbformat.append(colLengths[47]);
							sbformat.append("s");

							sbformat.append("|%49$-");
							sbformat.append(colLengths[48]);
							sbformat.append("s");

							sbformat.append("|%50$-");
							sbformat.append(colLengths[49]);
							sbformat.append("s");

							sbformat.append("|%51$-");
							sbformat.append(colLengths[50]);
							sbformat.append("s");

							sbformat.append("|%52$-");
							sbformat.append(colLengths[51]);
							sbformat.append("s");

							sbformat.append("|%53$-");
							sbformat.append(colLengths[52]);
							sbformat.append("s");

							sbformat.append("|%54$-");
							sbformat.append(colLengths[53]);
							sbformat.append("s");

							sbformat.append("|%55$-");
							sbformat.append(colLengths[54]);
							sbformat.append("s");

							sbformat.append("|%56$-");
							sbformat.append(colLengths[55]);
							sbformat.append("s");

							sbformat.append("|%57$-");
							sbformat.append(colLengths[56]);
							sbformat.append("s");

							sbformat.append("|\n");

							formatter.format(sbformat.toString(), (Object[]) row);

							sb.append(formatter.toString());
							if (i == 0)
								sb.append(print(des_head)); // print the head
						}

						// end
						sb.append(print(des_bottom));
						return sb;
					}

					private StringBuilder print(String[] fillChars) {
						StringBuilder sb = new StringBuilder();
						// first column
						sb.append(fillChars[0]);
						for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[9] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[10] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[11] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[12] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[13] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[14] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[15] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[16] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[17] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[18] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[19] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[20] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[21] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[22] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[23] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[24] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[25] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[26] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[27] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[28] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[29] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[30] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[31] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[32] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[33] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[34] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[35] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[36] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[37] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[38] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[39] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[40] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[41] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[42] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[43] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[44] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[45] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[46] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[47] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[48] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[49] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[50] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[51] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[52] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[53] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[54] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[55] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						// last column
						for (int i = 0; i < colLengths[56] - fillChars[1].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[1]);
						sb.append("\n");
						return sb;
					}

					public boolean isTableEmpty() {
						if (list.size() > 1)
							return false;
						return true;
					}
				}
				Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
				util_tLogRow_1.setTableName("Consola");
				util_tLogRow_1.addRow(new String[] { "impacto_presupuestario_anio", "impacto_presupuestario_mes",
						"ejercicio_presupuestario", "sector_id", "sector_desc", "subsector_id", "subsector_desc",
						"caracter_id", "caracter_desc", "jurisdiccion_id", "jurisdiccion_desc", "subjurisdiccion_id",
						"subjurisdiccion_desc", "entidad_id", "entidad_desc", "servicio_id", "servicio_desc",
						"programa_id", "programa_desc", "subprograma_id", "subprograma_desc", "proyecto_id",
						"proyecto_desc", "actividad_id", "actividad_desc", "obra_id", "obra_desc", "finalidad_id",
						"finalidad_desc", "funcion_id", "funcion_desc", "inciso_id", "inciso_desc", "principal_id",
						"principal_desc", "parcial_id", "parcial_desc", "subparcial_id", "subparcial_desc",
						"clasificador_economico_8_digitos_id", "clasificador_economico_8_digitos_desc",
						"fuente_financiamiento_id", "fuente_financiamiento_desc", "ubicacion_geografica_id",
						"ubicacion_geografica_desc", "unidad_ejecutora_id", "unidad_ejecutora_desc",
						"prestamo_externo_id", "prestamo_externo_desc", "codigo_bapin_id", "codigo_bapin_desc",
						"credito_presupuestado", "credito_vigente", "credito_comprometido", "credito_devengado",
						"credito_pagado", "ultima_actualizacion_fecha", });
				StringBuilder strBuffer_tLogRow_1 = null;
				int nb_line_tLogRow_1 = 0;
///////////////////////    			

				/**
				 * [tLogRow_1 begin ] stop
				 */

				/**
				 * [tSortRow_1_SortOut begin ] start
				 */

				ok_Hash.put("tSortRow_1_SortOut", false);
				start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());

				currentVirtualComponent = "tSortRow_1";

				currentComponent = "tSortRow_1_SortOut";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row3");
				}

				int tos_count_tSortRow_1_SortOut = 0;

				class Comparablerow3Struct extends row3Struct implements Comparable<Comparablerow3Struct> {

					public int compareTo(Comparablerow3Struct other) {

						if (this.creditoRestante == null && other.creditoRestante != null) {
							return 1;

						} else if (this.creditoRestante != null && other.creditoRestante == null) {
							return -1;

						} else if (this.creditoRestante != null && other.creditoRestante != null) {
							if (!this.creditoRestante.equals(other.creditoRestante)) {
								return other.creditoRestante.compareTo(this.creditoRestante);
							}
						}
						return 0;
					}
				}

				java.util.List<Comparablerow3Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablerow3Struct>();

				/**
				 * [tSortRow_1_SortOut begin ] stop
				 */

				/**
				 * [tFilterRow_1 begin ] start
				 */

				ok_Hash.put("tFilterRow_1", false);
				start_Hash.put("tFilterRow_1", System.currentTimeMillis());

				currentComponent = "tFilterRow_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "creditoRestante");
				}

				int tos_count_tFilterRow_1 = 0;

				int nb_line_tFilterRow_1 = 0;
				int nb_line_ok_tFilterRow_1 = 0;
				int nb_line_reject_tFilterRow_1 = 0;

				class Operator_tFilterRow_1 {
					private String sErrorMsg = "";
					private boolean bMatchFlag = true;
					private String sUnionFlag = "&&";

					public Operator_tFilterRow_1(String unionFlag) {
						sUnionFlag = unionFlag;
						bMatchFlag = "||".equals(unionFlag) ? false : true;
					}

					public String getErrorMsg() {
						if (sErrorMsg != null && sErrorMsg.length() > 1)
							return sErrorMsg.substring(1);
						else
							return null;
					}

					public boolean getMatchFlag() {
						return bMatchFlag;
					}

					public void matches(boolean partMatched, String reason) {
						// no need to care about the next judgement
						if ("||".equals(sUnionFlag) && bMatchFlag) {
							return;
						}

						if (!partMatched) {
							sErrorMsg += "|" + reason;
						}

						if ("||".equals(sUnionFlag))
							bMatchFlag = bMatchFlag || partMatched;
						else
							bMatchFlag = bMatchFlag && partMatched;
					}
				}

				/**
				 * [tFilterRow_1 begin ] stop
				 */

				/**
				 * [tSortRow_2_SortOut begin ] start
				 */

				ok_Hash.put("tSortRow_2_SortOut", false);
				start_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());

				currentVirtualComponent = "tSortRow_2";

				currentComponent = "tSortRow_2_SortOut";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "clasificador");
				}

				int tos_count_tSortRow_2_SortOut = 0;

				class ComparableclasificadorStruct extends clasificadorStruct
						implements Comparable<ComparableclasificadorStruct> {

					public int compareTo(ComparableclasificadorStruct other) {

						if (this.presupuesto != other.presupuesto) {

							return other.presupuesto > this.presupuesto ? 1 : -1;

						}
						return 0;
					}
				}

				java.util.List<ComparableclasificadorStruct> list_tSortRow_2_SortOut = new java.util.ArrayList<ComparableclasificadorStruct>();

				/**
				 * [tSortRow_2_SortOut begin ] stop
				 */

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row1");
				}

				int tos_count_tMap_1 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_1__Struct {
					double creditoComprometido;
					double credito_vigente;
					int clasificador;
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
				creditoComprometidoStruct creditoComprometido_tmp = new creditoComprometidoStruct();
				creditoRestanteStruct creditoRestante_tmp = new creditoRestanteStruct();
				clasificadorStruct clasificador_tmp = new clasificadorStruct();
// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tDBInput_1 begin ] start
				 */

				ok_Hash.put("tDBInput_1", false);
				start_Hash.put("tDBInput_1", System.currentTimeMillis());

				currentComponent = "tDBInput_1";

				int tos_count_tDBInput_1 = 0;

				java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
				calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
				java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
				int nb_line_tDBInput_1 = 0;
				java.sql.Connection conn_tDBInput_1 = null;
				String driverClass_tDBInput_1 = "com.mysql.cj.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_1 = java.lang.Class.forName(driverClass_tDBInput_1);
				String dbUser_tDBInput_1 = "talend";

				final String decryptedPassword_tDBInput_1 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:Zv017UeIq3AjLjSzXxhUPiQV4sk71k5ZejK6XUydiL0Vuw==");

				String dbPwd_tDBInput_1 = decryptedPassword_tDBInput_1;

				String url_tDBInput_1 = "jdbc:mysql://" + "localhost" + ":" + "3306" + "/" + "training" + "?"
						+ "noDatetimeStringSync=true";

				conn_tDBInput_1 = java.sql.DriverManager.getConnection(url_tDBInput_1, dbUser_tDBInput_1,
						dbPwd_tDBInput_1);

				java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

				String dbquery_tDBInput_1 = "SELECT \n  `creditomensual2022`.`impacto_presupuestario_anio`, \n  `creditomensual2022`.`impacto_presupuestario_mes`, \n  "
						+ "`creditomensual2022`.`ejercicio_presupuestario`, \n  `creditomensual2022`.`sector_id`, \n  `creditomensual2022`.`sector_de"
						+ "sc`, \n  `creditomensual2022`.`subsector_id`, \n  `creditomensual2022`.`subsector_desc`, \n  `creditomensual2022`.`caracter"
						+ "_id`, \n  `creditomensual2022`.`caracter_desc`, \n  `creditomensual2022`.`jurisdiccion_id`, \n  `creditomensual2022`.`juris"
						+ "diccion_desc`, \n  `creditomensual2022`.`subjurisdiccion_id`, \n  `creditomensual2022`.`subjurisdiccion_desc`, \n  `credito"
						+ "mensual2022`.`entidad_id`, \n  `creditomensual2022`.`entidad_desc`, \n  `creditomensual2022`.`servicio_id`, \n  `creditomen"
						+ "sual2022`.`servicio_desc`, \n  `creditomensual2022`.`programa_id`, \n  `creditomensual2022`.`programa_desc`, \n  `creditome"
						+ "nsual2022`.`subprograma_id`, \n  `creditomensual2022`.`subprograma_desc`, \n  `creditomensual2022`.`proyecto_id`, \n  `cred"
						+ "itomensual2022`.`proyecto_desc`, \n  `creditomensual2022`.`actividad_id`, \n  `creditomensual2022`.`actividad_desc`, \n  `c"
						+ "reditomensual2022`.`obra_id`, \n  `creditomensual2022`.`obra_desc`, \n  `creditomensual2022`.`finalidad_id`, \n  `creditome"
						+ "nsual2022`.`finalidad_desc`, \n  `creditomensual2022`.`funcion_id`, \n  `creditomensual2022`.`funcion_desc`, \n  `creditome"
						+ "nsual2022`.`inciso_id`, \n  `creditomensual2022`.`inciso_desc`, \n  `creditomensual2022`.`principal_id`, \n  `creditomensua"
						+ "l2022`.`principal_desc`, \n  `creditomensual2022`.`parcial_id`, \n  `creditomensual2022`.`parcial_desc`, \n  `creditomensua"
						+ "l2022`.`subparcial_id`, \n  `creditomensual2022`.`subparcial_desc`, \n  `creditomensual2022`.`clasificador_economico_8_dig"
						+ "itos_id`, \n  `creditomensual2022`.`clasificador_economico_8_digitos_desc`, \n  `creditomensual2022`.`fuente_financiamient"
						+ "o_id`, \n  `creditomensual2022`.`fuente_financiamiento_desc`, \n  `creditomensual2022`.`ubicacion_geografica_id`, \n  `cred"
						+ "itomensual2022`.`ubicacion_geografica_desc`, \n  `creditomensual2022`.`unidad_ejecutora_id`, \n  `creditomensual2022`.`uni"
						+ "dad_ejecutora_desc`, \n  `creditomensual2022`.`prestamo_externo_id`, \n  `creditomensual2022`.`prestamo_externo_desc`, \n  "
						+ "`creditomensual2022`.`codigo_bapin_id`, \n  `creditomensual2022`.`codigo_bapin_desc`, \n  `creditomensual2022`.`credito_pr"
						+ "esupuestado`, \n  `creditomensual2022`.`credito_vigente`, \n  `creditomensual2022`.`credito_comprometido`, \n  `creditomens"
						+ "ual2022`.`credito_devengado`, \n  `creditomensual2022`.`credito_pagado`, \n  `creditomensual2022`.`ultima_actualizacion_fe"
						+ "cha`\nFROM `creditomensual2022`";

				globalMap.put("tDBInput_1_QUERY", dbquery_tDBInput_1);
				java.sql.ResultSet rs_tDBInput_1 = null;

				try {
					rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
					java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
					int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

					String tmpContent_tDBInput_1 = null;

					while (rs_tDBInput_1.next()) {
						nb_line_tDBInput_1++;

						if (colQtyInRs_tDBInput_1 < 1) {
							row1.impacto_presupuestario_anio = null;
						} else {

							row1.impacto_presupuestario_anio = rs_tDBInput_1.getInt(1);
							if (rs_tDBInput_1.wasNull()) {
								row1.impacto_presupuestario_anio = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 2) {
							row1.impacto_presupuestario_mes = null;
						} else {

							row1.impacto_presupuestario_mes = rs_tDBInput_1.getInt(2);
							if (rs_tDBInput_1.wasNull()) {
								row1.impacto_presupuestario_mes = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 3) {
							row1.ejercicio_presupuestario = null;
						} else {

							row1.ejercicio_presupuestario = rs_tDBInput_1.getInt(3);
							if (rs_tDBInput_1.wasNull()) {
								row1.ejercicio_presupuestario = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 4) {
							row1.sector_id = null;
						} else {

							row1.sector_id = rs_tDBInput_1.getInt(4);
							if (rs_tDBInput_1.wasNull()) {
								row1.sector_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 5) {
							row1.sector_desc = null;
						} else {

							row1.sector_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
						}
						if (colQtyInRs_tDBInput_1 < 6) {
							row1.subsector_id = null;
						} else {

							row1.subsector_id = rs_tDBInput_1.getInt(6);
							if (rs_tDBInput_1.wasNull()) {
								row1.subsector_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 7) {
							row1.subsector_desc = null;
						} else {

							row1.subsector_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 7, false);
						}
						if (colQtyInRs_tDBInput_1 < 8) {
							row1.caracter_id = null;
						} else {

							row1.caracter_id = rs_tDBInput_1.getInt(8);
							if (rs_tDBInput_1.wasNull()) {
								row1.caracter_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 9) {
							row1.caracter_desc = null;
						} else {

							row1.caracter_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 9, false);
						}
						if (colQtyInRs_tDBInput_1 < 10) {
							row1.jurisdiccion_id = null;
						} else {

							row1.jurisdiccion_id = rs_tDBInput_1.getInt(10);
							if (rs_tDBInput_1.wasNull()) {
								row1.jurisdiccion_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 11) {
							row1.jurisdiccion_desc = null;
						} else {

							row1.jurisdiccion_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 11, false);
						}
						if (colQtyInRs_tDBInput_1 < 12) {
							row1.subjurisdiccion_id = null;
						} else {

							row1.subjurisdiccion_id = rs_tDBInput_1.getInt(12);
							if (rs_tDBInput_1.wasNull()) {
								row1.subjurisdiccion_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 13) {
							row1.subjurisdiccion_desc = null;
						} else {

							row1.subjurisdiccion_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 13, false);
						}
						if (colQtyInRs_tDBInput_1 < 14) {
							row1.entidad_id = null;
						} else {

							row1.entidad_id = rs_tDBInput_1.getInt(14);
							if (rs_tDBInput_1.wasNull()) {
								row1.entidad_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 15) {
							row1.entidad_desc = null;
						} else {

							row1.entidad_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 15, false);
						}
						if (colQtyInRs_tDBInput_1 < 16) {
							row1.servicio_id = null;
						} else {

							row1.servicio_id = rs_tDBInput_1.getInt(16);
							if (rs_tDBInput_1.wasNull()) {
								row1.servicio_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 17) {
							row1.servicio_desc = null;
						} else {

							row1.servicio_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 17, false);
						}
						if (colQtyInRs_tDBInput_1 < 18) {
							row1.programa_id = null;
						} else {

							row1.programa_id = rs_tDBInput_1.getInt(18);
							if (rs_tDBInput_1.wasNull()) {
								row1.programa_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 19) {
							row1.programa_desc = null;
						} else {

							row1.programa_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 19, false);
						}
						if (colQtyInRs_tDBInput_1 < 20) {
							row1.subprograma_id = null;
						} else {

							row1.subprograma_id = rs_tDBInput_1.getInt(20);
							if (rs_tDBInput_1.wasNull()) {
								row1.subprograma_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 21) {
							row1.subprograma_desc = null;
						} else {

							row1.subprograma_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 21, false);
						}
						if (colQtyInRs_tDBInput_1 < 22) {
							row1.proyecto_id = null;
						} else {

							row1.proyecto_id = rs_tDBInput_1.getInt(22);
							if (rs_tDBInput_1.wasNull()) {
								row1.proyecto_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 23) {
							row1.proyecto_desc = null;
						} else {

							row1.proyecto_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 23, false);
						}
						if (colQtyInRs_tDBInput_1 < 24) {
							row1.actividad_id = null;
						} else {

							row1.actividad_id = rs_tDBInput_1.getInt(24);
							if (rs_tDBInput_1.wasNull()) {
								row1.actividad_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 25) {
							row1.actividad_desc = null;
						} else {

							row1.actividad_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 25, false);
						}
						if (colQtyInRs_tDBInput_1 < 26) {
							row1.obra_id = null;
						} else {

							row1.obra_id = rs_tDBInput_1.getInt(26);
							if (rs_tDBInput_1.wasNull()) {
								row1.obra_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 27) {
							row1.obra_desc = null;
						} else {

							row1.obra_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 27, false);
						}
						if (colQtyInRs_tDBInput_1 < 28) {
							row1.finalidad_id = null;
						} else {

							row1.finalidad_id = rs_tDBInput_1.getInt(28);
							if (rs_tDBInput_1.wasNull()) {
								row1.finalidad_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 29) {
							row1.finalidad_desc = null;
						} else {

							row1.finalidad_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 29, false);
						}
						if (colQtyInRs_tDBInput_1 < 30) {
							row1.funcion_id = null;
						} else {

							row1.funcion_id = rs_tDBInput_1.getInt(30);
							if (rs_tDBInput_1.wasNull()) {
								row1.funcion_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 31) {
							row1.funcion_desc = null;
						} else {

							row1.funcion_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 31, false);
						}
						if (colQtyInRs_tDBInput_1 < 32) {
							row1.inciso_id = null;
						} else {

							row1.inciso_id = rs_tDBInput_1.getInt(32);
							if (rs_tDBInput_1.wasNull()) {
								row1.inciso_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 33) {
							row1.inciso_desc = null;
						} else {

							row1.inciso_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 33, false);
						}
						if (colQtyInRs_tDBInput_1 < 34) {
							row1.principal_id = null;
						} else {

							row1.principal_id = rs_tDBInput_1.getInt(34);
							if (rs_tDBInput_1.wasNull()) {
								row1.principal_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 35) {
							row1.principal_desc = null;
						} else {

							row1.principal_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 35, false);
						}
						if (colQtyInRs_tDBInput_1 < 36) {
							row1.parcial_id = null;
						} else {

							row1.parcial_id = rs_tDBInput_1.getInt(36);
							if (rs_tDBInput_1.wasNull()) {
								row1.parcial_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 37) {
							row1.parcial_desc = null;
						} else {

							row1.parcial_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 37, false);
						}
						if (colQtyInRs_tDBInput_1 < 38) {
							row1.subparcial_id = null;
						} else {

							row1.subparcial_id = rs_tDBInput_1.getInt(38);
							if (rs_tDBInput_1.wasNull()) {
								row1.subparcial_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 39) {
							row1.subparcial_desc = null;
						} else {

							row1.subparcial_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 39, false);
						}
						if (colQtyInRs_tDBInput_1 < 40) {
							row1.clasificador_economico_8_digitos_id = null;
						} else {

							row1.clasificador_economico_8_digitos_id = rs_tDBInput_1.getInt(40);
							if (rs_tDBInput_1.wasNull()) {
								row1.clasificador_economico_8_digitos_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 41) {
							row1.clasificador_economico_8_digitos_desc = null;
						} else {

							row1.clasificador_economico_8_digitos_desc = routines.system.JDBCUtil
									.getString(rs_tDBInput_1, 41, false);
						}
						if (colQtyInRs_tDBInput_1 < 42) {
							row1.fuente_financiamiento_id = null;
						} else {

							row1.fuente_financiamiento_id = rs_tDBInput_1.getDouble(42);
							if (rs_tDBInput_1.wasNull()) {
								row1.fuente_financiamiento_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 43) {
							row1.fuente_financiamiento_desc = null;
						} else {

							row1.fuente_financiamiento_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 43,
									false);
						}
						if (colQtyInRs_tDBInput_1 < 44) {
							row1.ubicacion_geografica_id = null;
						} else {

							row1.ubicacion_geografica_id = rs_tDBInput_1.getInt(44);
							if (rs_tDBInput_1.wasNull()) {
								row1.ubicacion_geografica_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 45) {
							row1.ubicacion_geografica_desc = null;
						} else {

							row1.ubicacion_geografica_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 45,
									false);
						}
						if (colQtyInRs_tDBInput_1 < 46) {
							row1.unidad_ejecutora_id = null;
						} else {

							row1.unidad_ejecutora_id = rs_tDBInput_1.getInt(46);
							if (rs_tDBInput_1.wasNull()) {
								row1.unidad_ejecutora_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 47) {
							row1.unidad_ejecutora_desc = null;
						} else {

							row1.unidad_ejecutora_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 47, false);
						}
						if (colQtyInRs_tDBInput_1 < 48) {
							row1.prestamo_externo_id = null;
						} else {

							row1.prestamo_externo_id = rs_tDBInput_1.getInt(48);
							if (rs_tDBInput_1.wasNull()) {
								row1.prestamo_externo_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 49) {
							row1.prestamo_externo_desc = null;
						} else {

							row1.prestamo_externo_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 49, false);
						}
						if (colQtyInRs_tDBInput_1 < 50) {
							row1.codigo_bapin_id = null;
						} else {

							row1.codigo_bapin_id = rs_tDBInput_1.getInt(50);
							if (rs_tDBInput_1.wasNull()) {
								row1.codigo_bapin_id = null;
							}
						}
						if (colQtyInRs_tDBInput_1 < 51) {
							row1.codigo_bapin_desc = null;
						} else {

							row1.codigo_bapin_desc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 51, false);
						}
						if (colQtyInRs_tDBInput_1 < 52) {
							row1.credito_presupuestado = null;
						} else {

							row1.credito_presupuestado = routines.system.JDBCUtil.getString(rs_tDBInput_1, 52, false);
						}
						if (colQtyInRs_tDBInput_1 < 53) {
							row1.credito_vigente = null;
						} else {

							row1.credito_vigente = routines.system.JDBCUtil.getString(rs_tDBInput_1, 53, false);
						}
						if (colQtyInRs_tDBInput_1 < 54) {
							row1.credito_comprometido = null;
						} else {

							row1.credito_comprometido = routines.system.JDBCUtil.getString(rs_tDBInput_1, 54, false);
						}
						if (colQtyInRs_tDBInput_1 < 55) {
							row1.credito_devengado = null;
						} else {

							row1.credito_devengado = routines.system.JDBCUtil.getString(rs_tDBInput_1, 55, false);
						}
						if (colQtyInRs_tDBInput_1 < 56) {
							row1.credito_pagado = null;
						} else {

							row1.credito_pagado = routines.system.JDBCUtil.getString(rs_tDBInput_1, 56, false);
						}
						if (colQtyInRs_tDBInput_1 < 57) {
							row1.ultima_actualizacion_fecha = null;
						} else {

							row1.ultima_actualizacion_fecha = routines.system.JDBCUtil.getString(rs_tDBInput_1, 57,
									false);
						}

						/**
						 * [tDBInput_1 begin ] stop
						 */

						/**
						 * [tDBInput_1 main ] start
						 */

						currentComponent = "tDBInput_1";

						tos_count_tDBInput_1++;

						/**
						 * [tDBInput_1 main ] stop
						 */

						/**
						 * [tDBInput_1 process_data_begin ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_begin ] stop
						 */

						/**
						 * [tMap_1 main ] start
						 */

						currentComponent = "tMap_1";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1, "row1");
						}

						boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

						// ###############################
						// # Input tables (lookups)
						boolean rejectedInnerJoin_tMap_1 = false;
						boolean mainRowRejected_tMap_1 = false;

						// ###############################
						{ // start of Var scope

							// ###############################
							// # Vars tables

							Var__tMap_1__Struct Var = Var__tMap_1;
							Var.creditoComprometido = Double
									.parseDouble(StringHandling.CHANGE(row1.credito_comprometido, ",", "."));
							Var.credito_vigente = Double
									.parseDouble(StringHandling.CHANGE(row1.credito_vigente, ",", "."));
							Var.clasificador = row1.clasificador_economico_8_digitos_id;// ###############################
							// ###############################
							// # Output tables

							creditoComprometido = null;
							creditoRestante = null;
							clasificador = null;

// # Output table : 'creditoComprometido'
// # Filter conditions 
							if (

							Var.creditoComprometido > 1

							) {
								creditoComprometido_tmp.impacto_presupuestario_anio = row1.impacto_presupuestario_anio;
								creditoComprometido_tmp.impacto_presupuestario_mes = row1.impacto_presupuestario_mes;
								creditoComprometido_tmp.ejercicio_presupuestario = row1.ejercicio_presupuestario;
								creditoComprometido_tmp.sector_id = row1.sector_id;
								creditoComprometido_tmp.sector_desc = TalendString
										.replaceSpecialCharForXML(row1.sector_desc);
								creditoComprometido_tmp.subsector_id = row1.subsector_id;
								creditoComprometido_tmp.subsector_desc = row1.subsector_desc;
								creditoComprometido_tmp.caracter_id = row1.caracter_id;
								creditoComprometido_tmp.caracter_desc = row1.caracter_desc;
								creditoComprometido_tmp.jurisdiccion_id = row1.jurisdiccion_id;
								creditoComprometido_tmp.jurisdiccion_desc = row1.jurisdiccion_desc;
								creditoComprometido_tmp.subjurisdiccion_id = row1.subjurisdiccion_id;
								creditoComprometido_tmp.subjurisdiccion_desc = row1.subjurisdiccion_desc;
								creditoComprometido_tmp.entidad_id = row1.entidad_id;
								creditoComprometido_tmp.entidad_desc = row1.entidad_desc;
								creditoComprometido_tmp.servicio_id = row1.servicio_id;
								creditoComprometido_tmp.servicio_desc = row1.servicio_desc;
								creditoComprometido_tmp.programa_id = row1.programa_id;
								creditoComprometido_tmp.programa_desc = row1.programa_desc;
								creditoComprometido_tmp.subprograma_id = row1.subprograma_id;
								creditoComprometido_tmp.subprograma_desc = row1.subprograma_desc;
								creditoComprometido_tmp.proyecto_id = row1.proyecto_id;
								creditoComprometido_tmp.proyecto_desc = row1.proyecto_desc;
								creditoComprometido_tmp.actividad_id = row1.actividad_id;
								creditoComprometido_tmp.actividad_desc = row1.actividad_desc;
								creditoComprometido_tmp.obra_id = row1.obra_id;
								creditoComprometido_tmp.obra_desc = row1.obra_desc;
								creditoComprometido_tmp.finalidad_id = row1.finalidad_id;
								creditoComprometido_tmp.finalidad_desc = row1.finalidad_desc;
								creditoComprometido_tmp.funcion_id = row1.funcion_id;
								creditoComprometido_tmp.funcion_desc = row1.funcion_desc;
								creditoComprometido_tmp.inciso_id = row1.inciso_id;
								creditoComprometido_tmp.inciso_desc = row1.inciso_desc;
								creditoComprometido_tmp.principal_id = row1.principal_id;
								creditoComprometido_tmp.principal_desc = row1.principal_desc;
								creditoComprometido_tmp.parcial_id = row1.parcial_id;
								creditoComprometido_tmp.parcial_desc = row1.parcial_desc;
								creditoComprometido_tmp.subparcial_id = row1.subparcial_id;
								creditoComprometido_tmp.subparcial_desc = row1.subparcial_desc;
								creditoComprometido_tmp.clasificador_economico_8_digitos_id = row1.clasificador_economico_8_digitos_id;
								creditoComprometido_tmp.clasificador_economico_8_digitos_desc = row1.clasificador_economico_8_digitos_desc;
								creditoComprometido_tmp.fuente_financiamiento_id = row1.fuente_financiamiento_id;
								creditoComprometido_tmp.fuente_financiamiento_desc = row1.fuente_financiamiento_desc;
								creditoComprometido_tmp.ubicacion_geografica_id = row1.ubicacion_geografica_id;
								creditoComprometido_tmp.ubicacion_geografica_desc = row1.ubicacion_geografica_desc;
								creditoComprometido_tmp.unidad_ejecutora_id = row1.unidad_ejecutora_id;
								creditoComprometido_tmp.unidad_ejecutora_desc = row1.unidad_ejecutora_desc;
								creditoComprometido_tmp.prestamo_externo_id = row1.prestamo_externo_id;
								creditoComprometido_tmp.prestamo_externo_desc = row1.prestamo_externo_desc;
								creditoComprometido_tmp.codigo_bapin_id = row1.codigo_bapin_id;
								creditoComprometido_tmp.codigo_bapin_desc = row1.codigo_bapin_desc;
								creditoComprometido_tmp.credito_presupuestado = row1.credito_presupuestado;
								creditoComprometido_tmp.credito_vigente = row1.credito_vigente;
								creditoComprometido_tmp.credito_comprometido = row1.credito_comprometido;
								creditoComprometido_tmp.credito_devengado = row1.credito_devengado;
								creditoComprometido_tmp.credito_pagado = row1.credito_pagado;
								creditoComprometido_tmp.ultima_actualizacion_fecha = row1.ultima_actualizacion_fecha;
								creditoComprometido = creditoComprometido_tmp;
							} // closing filter/reject

// # Output table : 'creditoRestante'
// # Filter conditions 
							if (

							Var.creditoComprometido >= 1

							) {
								creditoRestante_tmp.creditoRestante = Var.credito_vigente - Var.creditoComprometido;
								creditoRestante_tmp.impacto_presupuestario_anio = row1.impacto_presupuestario_anio;
								creditoRestante_tmp.impacto_presupuestario_mes = row1.impacto_presupuestario_mes;
								creditoRestante_tmp.ejercicio_presupuestario = row1.ejercicio_presupuestario;
								creditoRestante_tmp.sector_id = row1.sector_id;
								creditoRestante_tmp.sector_desc = row1.sector_desc;
								creditoRestante_tmp.subsector_id = row1.subsector_id;
								creditoRestante_tmp.subsector_desc = row1.subsector_desc;
								creditoRestante_tmp.caracter_id = row1.caracter_id;
								creditoRestante_tmp.caracter_desc = row1.caracter_desc;
								creditoRestante_tmp.jurisdiccion_id = row1.jurisdiccion_id;
								creditoRestante_tmp.jurisdiccion_desc = row1.jurisdiccion_desc;
								creditoRestante_tmp.subjurisdiccion_id = row1.subjurisdiccion_id;
								creditoRestante_tmp.subjurisdiccion_desc = row1.subjurisdiccion_desc;
								creditoRestante_tmp.entidad_id = row1.entidad_id;
								creditoRestante_tmp.entidad_desc = row1.entidad_desc;
								creditoRestante_tmp.servicio_id = row1.servicio_id;
								creditoRestante_tmp.servicio_desc = row1.servicio_desc;
								creditoRestante_tmp.programa_id = row1.programa_id;
								creditoRestante_tmp.programa_desc = row1.programa_desc;
								creditoRestante_tmp.subprograma_id = row1.subprograma_id;
								creditoRestante_tmp.subprograma_desc = row1.subprograma_desc;
								creditoRestante_tmp.proyecto_id = row1.proyecto_id;
								creditoRestante_tmp.proyecto_desc = row1.proyecto_desc;
								creditoRestante_tmp.actividad_id = row1.actividad_id;
								creditoRestante_tmp.actividad_desc = row1.actividad_desc;
								creditoRestante_tmp.obra_id = row1.obra_id;
								creditoRestante_tmp.obra_desc = row1.obra_desc;
								creditoRestante_tmp.finalidad_id = row1.finalidad_id;
								creditoRestante_tmp.finalidad_desc = row1.finalidad_desc;
								creditoRestante_tmp.funcion_id = row1.funcion_id;
								creditoRestante_tmp.funcion_desc = row1.funcion_desc;
								creditoRestante_tmp.inciso_id = row1.inciso_id;
								creditoRestante_tmp.inciso_desc = row1.inciso_desc;
								creditoRestante_tmp.principal_id = row1.principal_id;
								creditoRestante_tmp.principal_desc = row1.principal_desc;
								creditoRestante_tmp.parcial_id = row1.parcial_id;
								creditoRestante_tmp.parcial_desc = row1.parcial_desc;
								creditoRestante_tmp.subparcial_id = row1.subparcial_id;
								creditoRestante_tmp.subparcial_desc = row1.subparcial_desc;
								creditoRestante_tmp.clasificador_economico_8_digitos_id = row1.clasificador_economico_8_digitos_id;
								creditoRestante_tmp.clasificador_economico_8_digitos_desc = row1.clasificador_economico_8_digitos_desc;
								creditoRestante_tmp.fuente_financiamiento_id = row1.fuente_financiamiento_id;
								creditoRestante_tmp.fuente_financiamiento_desc = row1.fuente_financiamiento_desc;
								creditoRestante_tmp.ubicacion_geografica_id = row1.ubicacion_geografica_id;
								creditoRestante_tmp.ubicacion_geografica_desc = row1.ubicacion_geografica_desc;
								creditoRestante_tmp.unidad_ejecutora_id = row1.unidad_ejecutora_id;
								creditoRestante_tmp.unidad_ejecutora_desc = row1.unidad_ejecutora_desc;
								creditoRestante_tmp.prestamo_externo_id = row1.prestamo_externo_id;
								creditoRestante_tmp.prestamo_externo_desc = row1.prestamo_externo_desc;
								creditoRestante_tmp.codigo_bapin_id = row1.codigo_bapin_id;
								creditoRestante_tmp.codigo_bapin_desc = row1.codigo_bapin_desc;
								creditoRestante_tmp.credito_presupuestado = row1.credito_presupuestado;
								creditoRestante_tmp.credito_vigente = row1.credito_vigente;
								creditoRestante_tmp.credito_comprometido = row1.credito_comprometido;
								creditoRestante_tmp.credito_devengado = row1.credito_devengado;
								creditoRestante_tmp.credito_pagado = row1.credito_pagado;
								creditoRestante_tmp.ultima_actualizacion_fecha = row1.ultima_actualizacion_fecha;
								creditoRestante = creditoRestante_tmp;
							} // closing filter/reject

// # Output table : 'clasificador'
// # Filter conditions 
							if (

							Var.clasificador == 21211000

							) {
								clasificador_tmp.presupuesto = Var.credito_vigente - Var.creditoComprometido;
								clasificador = clasificador_tmp;
							} // closing filter/reject
// ###############################

						} // end of Var scope

						rejectedInnerJoin_tMap_1 = false;

						tos_count_tMap_1++;

						/**
						 * [tMap_1 main ] stop
						 */

						/**
						 * [tMap_1 process_data_begin ] start
						 */

						currentComponent = "tMap_1";

						/**
						 * [tMap_1 process_data_begin ] stop
						 */
// Start of branch "creditoComprometido"
						if (creditoComprometido != null) {

							/**
							 * [tLogRow_1 main ] start
							 */

							currentComponent = "tLogRow_1";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1, "creditoComprometido");
							}

///////////////////////		

							String[] row_tLogRow_1 = new String[57];

							if (creditoComprometido.impacto_presupuestario_anio != null) { //
								row_tLogRow_1[0] = String.valueOf(creditoComprometido.impacto_presupuestario_anio);

							} //

							if (creditoComprometido.impacto_presupuestario_mes != null) { //
								row_tLogRow_1[1] = String.valueOf(creditoComprometido.impacto_presupuestario_mes);

							} //

							if (creditoComprometido.ejercicio_presupuestario != null) { //
								row_tLogRow_1[2] = String.valueOf(creditoComprometido.ejercicio_presupuestario);

							} //

							if (creditoComprometido.sector_id != null) { //
								row_tLogRow_1[3] = String.valueOf(creditoComprometido.sector_id);

							} //

							if (creditoComprometido.sector_desc != null) { //
								row_tLogRow_1[4] = String.valueOf(creditoComprometido.sector_desc);

							} //

							if (creditoComprometido.subsector_id != null) { //
								row_tLogRow_1[5] = String.valueOf(creditoComprometido.subsector_id);

							} //

							if (creditoComprometido.subsector_desc != null) { //
								row_tLogRow_1[6] = String.valueOf(creditoComprometido.subsector_desc);

							} //

							if (creditoComprometido.caracter_id != null) { //
								row_tLogRow_1[7] = String.valueOf(creditoComprometido.caracter_id);

							} //

							if (creditoComprometido.caracter_desc != null) { //
								row_tLogRow_1[8] = String.valueOf(creditoComprometido.caracter_desc);

							} //

							if (creditoComprometido.jurisdiccion_id != null) { //
								row_tLogRow_1[9] = String.valueOf(creditoComprometido.jurisdiccion_id);

							} //

							if (creditoComprometido.jurisdiccion_desc != null) { //
								row_tLogRow_1[10] = String.valueOf(creditoComprometido.jurisdiccion_desc);

							} //

							if (creditoComprometido.subjurisdiccion_id != null) { //
								row_tLogRow_1[11] = String.valueOf(creditoComprometido.subjurisdiccion_id);

							} //

							if (creditoComprometido.subjurisdiccion_desc != null) { //
								row_tLogRow_1[12] = String.valueOf(creditoComprometido.subjurisdiccion_desc);

							} //

							if (creditoComprometido.entidad_id != null) { //
								row_tLogRow_1[13] = String.valueOf(creditoComprometido.entidad_id);

							} //

							if (creditoComprometido.entidad_desc != null) { //
								row_tLogRow_1[14] = String.valueOf(creditoComprometido.entidad_desc);

							} //

							if (creditoComprometido.servicio_id != null) { //
								row_tLogRow_1[15] = String.valueOf(creditoComprometido.servicio_id);

							} //

							if (creditoComprometido.servicio_desc != null) { //
								row_tLogRow_1[16] = String.valueOf(creditoComprometido.servicio_desc);

							} //

							if (creditoComprometido.programa_id != null) { //
								row_tLogRow_1[17] = String.valueOf(creditoComprometido.programa_id);

							} //

							if (creditoComprometido.programa_desc != null) { //
								row_tLogRow_1[18] = String.valueOf(creditoComprometido.programa_desc);

							} //

							if (creditoComprometido.subprograma_id != null) { //
								row_tLogRow_1[19] = String.valueOf(creditoComprometido.subprograma_id);

							} //

							if (creditoComprometido.subprograma_desc != null) { //
								row_tLogRow_1[20] = String.valueOf(creditoComprometido.subprograma_desc);

							} //

							if (creditoComprometido.proyecto_id != null) { //
								row_tLogRow_1[21] = String.valueOf(creditoComprometido.proyecto_id);

							} //

							if (creditoComprometido.proyecto_desc != null) { //
								row_tLogRow_1[22] = String.valueOf(creditoComprometido.proyecto_desc);

							} //

							if (creditoComprometido.actividad_id != null) { //
								row_tLogRow_1[23] = String.valueOf(creditoComprometido.actividad_id);

							} //

							if (creditoComprometido.actividad_desc != null) { //
								row_tLogRow_1[24] = String.valueOf(creditoComprometido.actividad_desc);

							} //

							if (creditoComprometido.obra_id != null) { //
								row_tLogRow_1[25] = String.valueOf(creditoComprometido.obra_id);

							} //

							if (creditoComprometido.obra_desc != null) { //
								row_tLogRow_1[26] = String.valueOf(creditoComprometido.obra_desc);

							} //

							if (creditoComprometido.finalidad_id != null) { //
								row_tLogRow_1[27] = String.valueOf(creditoComprometido.finalidad_id);

							} //

							if (creditoComprometido.finalidad_desc != null) { //
								row_tLogRow_1[28] = String.valueOf(creditoComprometido.finalidad_desc);

							} //

							if (creditoComprometido.funcion_id != null) { //
								row_tLogRow_1[29] = String.valueOf(creditoComprometido.funcion_id);

							} //

							if (creditoComprometido.funcion_desc != null) { //
								row_tLogRow_1[30] = String.valueOf(creditoComprometido.funcion_desc);

							} //

							if (creditoComprometido.inciso_id != null) { //
								row_tLogRow_1[31] = String.valueOf(creditoComprometido.inciso_id);

							} //

							if (creditoComprometido.inciso_desc != null) { //
								row_tLogRow_1[32] = String.valueOf(creditoComprometido.inciso_desc);

							} //

							if (creditoComprometido.principal_id != null) { //
								row_tLogRow_1[33] = String.valueOf(creditoComprometido.principal_id);

							} //

							if (creditoComprometido.principal_desc != null) { //
								row_tLogRow_1[34] = String.valueOf(creditoComprometido.principal_desc);

							} //

							if (creditoComprometido.parcial_id != null) { //
								row_tLogRow_1[35] = String.valueOf(creditoComprometido.parcial_id);

							} //

							if (creditoComprometido.parcial_desc != null) { //
								row_tLogRow_1[36] = String.valueOf(creditoComprometido.parcial_desc);

							} //

							if (creditoComprometido.subparcial_id != null) { //
								row_tLogRow_1[37] = String.valueOf(creditoComprometido.subparcial_id);

							} //

							if (creditoComprometido.subparcial_desc != null) { //
								row_tLogRow_1[38] = String.valueOf(creditoComprometido.subparcial_desc);

							} //

							if (creditoComprometido.clasificador_economico_8_digitos_id != null) { //
								row_tLogRow_1[39] = String
										.valueOf(creditoComprometido.clasificador_economico_8_digitos_id);

							} //

							if (creditoComprometido.clasificador_economico_8_digitos_desc != null) { //
								row_tLogRow_1[40] = String
										.valueOf(creditoComprometido.clasificador_economico_8_digitos_desc);

							} //

							if (creditoComprometido.fuente_financiamiento_id != null) { //
								row_tLogRow_1[41] = FormatterUtils
										.formatUnwithE(creditoComprometido.fuente_financiamiento_id);

							} //

							if (creditoComprometido.fuente_financiamiento_desc != null) { //
								row_tLogRow_1[42] = String.valueOf(creditoComprometido.fuente_financiamiento_desc);

							} //

							if (creditoComprometido.ubicacion_geografica_id != null) { //
								row_tLogRow_1[43] = String.valueOf(creditoComprometido.ubicacion_geografica_id);

							} //

							if (creditoComprometido.ubicacion_geografica_desc != null) { //
								row_tLogRow_1[44] = String.valueOf(creditoComprometido.ubicacion_geografica_desc);

							} //

							if (creditoComprometido.unidad_ejecutora_id != null) { //
								row_tLogRow_1[45] = String.valueOf(creditoComprometido.unidad_ejecutora_id);

							} //

							if (creditoComprometido.unidad_ejecutora_desc != null) { //
								row_tLogRow_1[46] = String.valueOf(creditoComprometido.unidad_ejecutora_desc);

							} //

							if (creditoComprometido.prestamo_externo_id != null) { //
								row_tLogRow_1[47] = String.valueOf(creditoComprometido.prestamo_externo_id);

							} //

							if (creditoComprometido.prestamo_externo_desc != null) { //
								row_tLogRow_1[48] = String.valueOf(creditoComprometido.prestamo_externo_desc);

							} //

							if (creditoComprometido.codigo_bapin_id != null) { //
								row_tLogRow_1[49] = String.valueOf(creditoComprometido.codigo_bapin_id);

							} //

							if (creditoComprometido.codigo_bapin_desc != null) { //
								row_tLogRow_1[50] = String.valueOf(creditoComprometido.codigo_bapin_desc);

							} //

							if (creditoComprometido.credito_presupuestado != null) { //
								row_tLogRow_1[51] = String.valueOf(creditoComprometido.credito_presupuestado);

							} //

							if (creditoComprometido.credito_vigente != null) { //
								row_tLogRow_1[52] = String.valueOf(creditoComprometido.credito_vigente);

							} //

							if (creditoComprometido.credito_comprometido != null) { //
								row_tLogRow_1[53] = String.valueOf(creditoComprometido.credito_comprometido);

							} //

							if (creditoComprometido.credito_devengado != null) { //
								row_tLogRow_1[54] = String.valueOf(creditoComprometido.credito_devengado);

							} //

							if (creditoComprometido.credito_pagado != null) { //
								row_tLogRow_1[55] = String.valueOf(creditoComprometido.credito_pagado);

							} //

							if (creditoComprometido.ultima_actualizacion_fecha != null) { //
								row_tLogRow_1[56] = String.valueOf(creditoComprometido.ultima_actualizacion_fecha);

							} //

							util_tLogRow_1.addRow(row_tLogRow_1);
							nb_line_tLogRow_1++;
//////

//////                    

///////////////////////    			

							row2 = creditoComprometido;

							tos_count_tLogRow_1++;

							/**
							 * [tLogRow_1 main ] stop
							 */

							/**
							 * [tLogRow_1 process_data_begin ] start
							 */

							currentComponent = "tLogRow_1";

							/**
							 * [tLogRow_1 process_data_begin ] stop
							 */

							/**
							 * [tFileOutputDelimited_1 main ] start
							 */

							currentComponent = "tFileOutputDelimited_1";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1, "row2");
							}

							StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
							if (row2.impacto_presupuestario_anio != null) {
								sb_tFileOutputDelimited_1.append(row2.impacto_presupuestario_anio);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.impacto_presupuestario_mes != null) {
								sb_tFileOutputDelimited_1.append(row2.impacto_presupuestario_mes);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.ejercicio_presupuestario != null) {
								sb_tFileOutputDelimited_1.append(row2.ejercicio_presupuestario);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.sector_id != null) {
								sb_tFileOutputDelimited_1.append(row2.sector_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.sector_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.sector_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subsector_id != null) {
								sb_tFileOutputDelimited_1.append(row2.subsector_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subsector_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.subsector_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.caracter_id != null) {
								sb_tFileOutputDelimited_1.append(row2.caracter_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.caracter_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.caracter_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.jurisdiccion_id != null) {
								sb_tFileOutputDelimited_1.append(row2.jurisdiccion_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.jurisdiccion_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.jurisdiccion_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subjurisdiccion_id != null) {
								sb_tFileOutputDelimited_1.append(row2.subjurisdiccion_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subjurisdiccion_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.subjurisdiccion_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.entidad_id != null) {
								sb_tFileOutputDelimited_1.append(row2.entidad_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.entidad_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.entidad_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.servicio_id != null) {
								sb_tFileOutputDelimited_1.append(row2.servicio_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.servicio_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.servicio_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.programa_id != null) {
								sb_tFileOutputDelimited_1.append(row2.programa_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.programa_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.programa_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subprograma_id != null) {
								sb_tFileOutputDelimited_1.append(row2.subprograma_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subprograma_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.subprograma_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.proyecto_id != null) {
								sb_tFileOutputDelimited_1.append(row2.proyecto_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.proyecto_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.proyecto_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.actividad_id != null) {
								sb_tFileOutputDelimited_1.append(row2.actividad_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.actividad_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.actividad_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.obra_id != null) {
								sb_tFileOutputDelimited_1.append(row2.obra_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.obra_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.obra_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.finalidad_id != null) {
								sb_tFileOutputDelimited_1.append(row2.finalidad_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.finalidad_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.finalidad_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.funcion_id != null) {
								sb_tFileOutputDelimited_1.append(row2.funcion_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.funcion_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.funcion_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.inciso_id != null) {
								sb_tFileOutputDelimited_1.append(row2.inciso_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.inciso_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.inciso_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.principal_id != null) {
								sb_tFileOutputDelimited_1.append(row2.principal_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.principal_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.principal_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.parcial_id != null) {
								sb_tFileOutputDelimited_1.append(row2.parcial_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.parcial_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.parcial_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subparcial_id != null) {
								sb_tFileOutputDelimited_1.append(row2.subparcial_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.subparcial_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.subparcial_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.clasificador_economico_8_digitos_id != null) {
								sb_tFileOutputDelimited_1.append(row2.clasificador_economico_8_digitos_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.clasificador_economico_8_digitos_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.clasificador_economico_8_digitos_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.fuente_financiamiento_id != null) {
								sb_tFileOutputDelimited_1.append(row2.fuente_financiamiento_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.fuente_financiamiento_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.fuente_financiamiento_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.ubicacion_geografica_id != null) {
								sb_tFileOutputDelimited_1.append(row2.ubicacion_geografica_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.ubicacion_geografica_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.ubicacion_geografica_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.unidad_ejecutora_id != null) {
								sb_tFileOutputDelimited_1.append(row2.unidad_ejecutora_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.unidad_ejecutora_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.unidad_ejecutora_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.prestamo_externo_id != null) {
								sb_tFileOutputDelimited_1.append(row2.prestamo_externo_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.prestamo_externo_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.prestamo_externo_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.codigo_bapin_id != null) {
								sb_tFileOutputDelimited_1.append(row2.codigo_bapin_id);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.codigo_bapin_desc != null) {
								sb_tFileOutputDelimited_1.append(row2.codigo_bapin_desc);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.credito_presupuestado != null) {
								sb_tFileOutputDelimited_1.append(row2.credito_presupuestado);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.credito_vigente != null) {
								sb_tFileOutputDelimited_1.append(row2.credito_vigente);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.credito_comprometido != null) {
								sb_tFileOutputDelimited_1.append(row2.credito_comprometido);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.credito_devengado != null) {
								sb_tFileOutputDelimited_1.append(row2.credito_devengado);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.credito_pagado != null) {
								sb_tFileOutputDelimited_1.append(row2.credito_pagado);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
							if (row2.ultima_actualizacion_fecha != null) {
								sb_tFileOutputDelimited_1.append(row2.ultima_actualizacion_fecha);
							}
							sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);

							nb_line_tFileOutputDelimited_1++;
							resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

							outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

							tos_count_tFileOutputDelimited_1++;

							/**
							 * [tFileOutputDelimited_1 main ] stop
							 */

							/**
							 * [tFileOutputDelimited_1 process_data_begin ] start
							 */

							currentComponent = "tFileOutputDelimited_1";

							/**
							 * [tFileOutputDelimited_1 process_data_begin ] stop
							 */

							/**
							 * [tFileOutputDelimited_1 process_data_end ] start
							 */

							currentComponent = "tFileOutputDelimited_1";

							/**
							 * [tFileOutputDelimited_1 process_data_end ] stop
							 */

							/**
							 * [tLogRow_1 process_data_end ] start
							 */

							currentComponent = "tLogRow_1";

							/**
							 * [tLogRow_1 process_data_end ] stop
							 */

						} // End of branch "creditoComprometido"

// Start of branch "creditoRestante"
						if (creditoRestante != null) {

							/**
							 * [tFilterRow_1 main ] start
							 */

							currentComponent = "tFilterRow_1";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1, "creditoRestante");
							}

							row3 = null;
							Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
							ope_tFilterRow_1
									.matches(
											(creditoRestante.creditoRestante == null ? false
													: creditoRestante.creditoRestante.compareTo(
															ParserUtils.parseTo_Double(String.valueOf(10))) < 0),
											"creditoRestante.compareTo(10) < 0 failed");

							if (ope_tFilterRow_1.getMatchFlag()) {
								if (row3 == null) {
									row3 = new row3Struct();
								}
								row3.creditoRestante = creditoRestante.creditoRestante;
								row3.impacto_presupuestario_anio = creditoRestante.impacto_presupuestario_anio;
								row3.impacto_presupuestario_mes = creditoRestante.impacto_presupuestario_mes;
								row3.ejercicio_presupuestario = creditoRestante.ejercicio_presupuestario;
								row3.sector_id = creditoRestante.sector_id;
								row3.sector_desc = creditoRestante.sector_desc;
								row3.subsector_id = creditoRestante.subsector_id;
								row3.subsector_desc = creditoRestante.subsector_desc;
								row3.caracter_id = creditoRestante.caracter_id;
								row3.caracter_desc = creditoRestante.caracter_desc;
								row3.jurisdiccion_id = creditoRestante.jurisdiccion_id;
								row3.jurisdiccion_desc = creditoRestante.jurisdiccion_desc;
								row3.subjurisdiccion_id = creditoRestante.subjurisdiccion_id;
								row3.subjurisdiccion_desc = creditoRestante.subjurisdiccion_desc;
								row3.entidad_id = creditoRestante.entidad_id;
								row3.entidad_desc = creditoRestante.entidad_desc;
								row3.servicio_id = creditoRestante.servicio_id;
								row3.servicio_desc = creditoRestante.servicio_desc;
								row3.programa_id = creditoRestante.programa_id;
								row3.programa_desc = creditoRestante.programa_desc;
								row3.subprograma_id = creditoRestante.subprograma_id;
								row3.subprograma_desc = creditoRestante.subprograma_desc;
								row3.proyecto_id = creditoRestante.proyecto_id;
								row3.proyecto_desc = creditoRestante.proyecto_desc;
								row3.actividad_id = creditoRestante.actividad_id;
								row3.actividad_desc = creditoRestante.actividad_desc;
								row3.obra_id = creditoRestante.obra_id;
								row3.obra_desc = creditoRestante.obra_desc;
								row3.finalidad_id = creditoRestante.finalidad_id;
								row3.finalidad_desc = creditoRestante.finalidad_desc;
								row3.funcion_id = creditoRestante.funcion_id;
								row3.funcion_desc = creditoRestante.funcion_desc;
								row3.inciso_id = creditoRestante.inciso_id;
								row3.inciso_desc = creditoRestante.inciso_desc;
								row3.principal_id = creditoRestante.principal_id;
								row3.principal_desc = creditoRestante.principal_desc;
								row3.parcial_id = creditoRestante.parcial_id;
								row3.parcial_desc = creditoRestante.parcial_desc;
								row3.subparcial_id = creditoRestante.subparcial_id;
								row3.subparcial_desc = creditoRestante.subparcial_desc;
								row3.clasificador_economico_8_digitos_id = creditoRestante.clasificador_economico_8_digitos_id;
								row3.clasificador_economico_8_digitos_desc = creditoRestante.clasificador_economico_8_digitos_desc;
								row3.fuente_financiamiento_id = creditoRestante.fuente_financiamiento_id;
								row3.fuente_financiamiento_desc = creditoRestante.fuente_financiamiento_desc;
								row3.ubicacion_geografica_id = creditoRestante.ubicacion_geografica_id;
								row3.ubicacion_geografica_desc = creditoRestante.ubicacion_geografica_desc;
								row3.unidad_ejecutora_id = creditoRestante.unidad_ejecutora_id;
								row3.unidad_ejecutora_desc = creditoRestante.unidad_ejecutora_desc;
								row3.prestamo_externo_id = creditoRestante.prestamo_externo_id;
								row3.prestamo_externo_desc = creditoRestante.prestamo_externo_desc;
								row3.codigo_bapin_id = creditoRestante.codigo_bapin_id;
								row3.codigo_bapin_desc = creditoRestante.codigo_bapin_desc;
								row3.credito_presupuestado = creditoRestante.credito_presupuestado;
								row3.credito_vigente = creditoRestante.credito_vigente;
								row3.credito_comprometido = creditoRestante.credito_comprometido;
								row3.credito_devengado = creditoRestante.credito_devengado;
								row3.credito_pagado = creditoRestante.credito_pagado;
								row3.ultima_actualizacion_fecha = creditoRestante.ultima_actualizacion_fecha;
								nb_line_ok_tFilterRow_1++;
							} else {
								nb_line_reject_tFilterRow_1++;
							}

							nb_line_tFilterRow_1++;

							tos_count_tFilterRow_1++;

							/**
							 * [tFilterRow_1 main ] stop
							 */

							/**
							 * [tFilterRow_1 process_data_begin ] start
							 */

							currentComponent = "tFilterRow_1";

							/**
							 * [tFilterRow_1 process_data_begin ] stop
							 */
// Start of branch "row3"
							if (row3 != null) {

								/**
								 * [tSortRow_1_SortOut main ] start
								 */

								currentVirtualComponent = "tSortRow_1";

								currentComponent = "tSortRow_1_SortOut";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1, "row3");
								}

								Comparablerow3Struct arrayRowtSortRow_1_SortOut = new Comparablerow3Struct();

								arrayRowtSortRow_1_SortOut.creditoRestante = row3.creditoRestante;
								arrayRowtSortRow_1_SortOut.impacto_presupuestario_anio = row3.impacto_presupuestario_anio;
								arrayRowtSortRow_1_SortOut.impacto_presupuestario_mes = row3.impacto_presupuestario_mes;
								arrayRowtSortRow_1_SortOut.ejercicio_presupuestario = row3.ejercicio_presupuestario;
								arrayRowtSortRow_1_SortOut.sector_id = row3.sector_id;
								arrayRowtSortRow_1_SortOut.sector_desc = row3.sector_desc;
								arrayRowtSortRow_1_SortOut.subsector_id = row3.subsector_id;
								arrayRowtSortRow_1_SortOut.subsector_desc = row3.subsector_desc;
								arrayRowtSortRow_1_SortOut.caracter_id = row3.caracter_id;
								arrayRowtSortRow_1_SortOut.caracter_desc = row3.caracter_desc;
								arrayRowtSortRow_1_SortOut.jurisdiccion_id = row3.jurisdiccion_id;
								arrayRowtSortRow_1_SortOut.jurisdiccion_desc = row3.jurisdiccion_desc;
								arrayRowtSortRow_1_SortOut.subjurisdiccion_id = row3.subjurisdiccion_id;
								arrayRowtSortRow_1_SortOut.subjurisdiccion_desc = row3.subjurisdiccion_desc;
								arrayRowtSortRow_1_SortOut.entidad_id = row3.entidad_id;
								arrayRowtSortRow_1_SortOut.entidad_desc = row3.entidad_desc;
								arrayRowtSortRow_1_SortOut.servicio_id = row3.servicio_id;
								arrayRowtSortRow_1_SortOut.servicio_desc = row3.servicio_desc;
								arrayRowtSortRow_1_SortOut.programa_id = row3.programa_id;
								arrayRowtSortRow_1_SortOut.programa_desc = row3.programa_desc;
								arrayRowtSortRow_1_SortOut.subprograma_id = row3.subprograma_id;
								arrayRowtSortRow_1_SortOut.subprograma_desc = row3.subprograma_desc;
								arrayRowtSortRow_1_SortOut.proyecto_id = row3.proyecto_id;
								arrayRowtSortRow_1_SortOut.proyecto_desc = row3.proyecto_desc;
								arrayRowtSortRow_1_SortOut.actividad_id = row3.actividad_id;
								arrayRowtSortRow_1_SortOut.actividad_desc = row3.actividad_desc;
								arrayRowtSortRow_1_SortOut.obra_id = row3.obra_id;
								arrayRowtSortRow_1_SortOut.obra_desc = row3.obra_desc;
								arrayRowtSortRow_1_SortOut.finalidad_id = row3.finalidad_id;
								arrayRowtSortRow_1_SortOut.finalidad_desc = row3.finalidad_desc;
								arrayRowtSortRow_1_SortOut.funcion_id = row3.funcion_id;
								arrayRowtSortRow_1_SortOut.funcion_desc = row3.funcion_desc;
								arrayRowtSortRow_1_SortOut.inciso_id = row3.inciso_id;
								arrayRowtSortRow_1_SortOut.inciso_desc = row3.inciso_desc;
								arrayRowtSortRow_1_SortOut.principal_id = row3.principal_id;
								arrayRowtSortRow_1_SortOut.principal_desc = row3.principal_desc;
								arrayRowtSortRow_1_SortOut.parcial_id = row3.parcial_id;
								arrayRowtSortRow_1_SortOut.parcial_desc = row3.parcial_desc;
								arrayRowtSortRow_1_SortOut.subparcial_id = row3.subparcial_id;
								arrayRowtSortRow_1_SortOut.subparcial_desc = row3.subparcial_desc;
								arrayRowtSortRow_1_SortOut.clasificador_economico_8_digitos_id = row3.clasificador_economico_8_digitos_id;
								arrayRowtSortRow_1_SortOut.clasificador_economico_8_digitos_desc = row3.clasificador_economico_8_digitos_desc;
								arrayRowtSortRow_1_SortOut.fuente_financiamiento_id = row3.fuente_financiamiento_id;
								arrayRowtSortRow_1_SortOut.fuente_financiamiento_desc = row3.fuente_financiamiento_desc;
								arrayRowtSortRow_1_SortOut.ubicacion_geografica_id = row3.ubicacion_geografica_id;
								arrayRowtSortRow_1_SortOut.ubicacion_geografica_desc = row3.ubicacion_geografica_desc;
								arrayRowtSortRow_1_SortOut.unidad_ejecutora_id = row3.unidad_ejecutora_id;
								arrayRowtSortRow_1_SortOut.unidad_ejecutora_desc = row3.unidad_ejecutora_desc;
								arrayRowtSortRow_1_SortOut.prestamo_externo_id = row3.prestamo_externo_id;
								arrayRowtSortRow_1_SortOut.prestamo_externo_desc = row3.prestamo_externo_desc;
								arrayRowtSortRow_1_SortOut.codigo_bapin_id = row3.codigo_bapin_id;
								arrayRowtSortRow_1_SortOut.codigo_bapin_desc = row3.codigo_bapin_desc;
								arrayRowtSortRow_1_SortOut.credito_presupuestado = row3.credito_presupuestado;
								arrayRowtSortRow_1_SortOut.credito_vigente = row3.credito_vigente;
								arrayRowtSortRow_1_SortOut.credito_comprometido = row3.credito_comprometido;
								arrayRowtSortRow_1_SortOut.credito_devengado = row3.credito_devengado;
								arrayRowtSortRow_1_SortOut.credito_pagado = row3.credito_pagado;
								arrayRowtSortRow_1_SortOut.ultima_actualizacion_fecha = row3.ultima_actualizacion_fecha;
								list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

								tos_count_tSortRow_1_SortOut++;

								/**
								 * [tSortRow_1_SortOut main ] stop
								 */

								/**
								 * [tSortRow_1_SortOut process_data_begin ] start
								 */

								currentVirtualComponent = "tSortRow_1";

								currentComponent = "tSortRow_1_SortOut";

								/**
								 * [tSortRow_1_SortOut process_data_begin ] stop
								 */

								/**
								 * [tSortRow_1_SortOut process_data_end ] start
								 */

								currentVirtualComponent = "tSortRow_1";

								currentComponent = "tSortRow_1_SortOut";

								/**
								 * [tSortRow_1_SortOut process_data_end ] stop
								 */

							} // End of branch "row3"

							/**
							 * [tFilterRow_1 process_data_end ] start
							 */

							currentComponent = "tFilterRow_1";

							/**
							 * [tFilterRow_1 process_data_end ] stop
							 */

						} // End of branch "creditoRestante"

// Start of branch "clasificador"
						if (clasificador != null) {

							/**
							 * [tSortRow_2_SortOut main ] start
							 */

							currentVirtualComponent = "tSortRow_2";

							currentComponent = "tSortRow_2_SortOut";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1, "clasificador");
							}

							ComparableclasificadorStruct arrayRowtSortRow_2_SortOut = new ComparableclasificadorStruct();

							arrayRowtSortRow_2_SortOut.presupuesto = clasificador.presupuesto;
							list_tSortRow_2_SortOut.add(arrayRowtSortRow_2_SortOut);

							tos_count_tSortRow_2_SortOut++;

							/**
							 * [tSortRow_2_SortOut main ] stop
							 */

							/**
							 * [tSortRow_2_SortOut process_data_begin ] start
							 */

							currentVirtualComponent = "tSortRow_2";

							currentComponent = "tSortRow_2_SortOut";

							/**
							 * [tSortRow_2_SortOut process_data_begin ] stop
							 */

							/**
							 * [tSortRow_2_SortOut process_data_end ] start
							 */

							currentVirtualComponent = "tSortRow_2";

							currentComponent = "tSortRow_2_SortOut";

							/**
							 * [tSortRow_2_SortOut process_data_end ] stop
							 */

						} // End of branch "clasificador"

						/**
						 * [tMap_1 process_data_end ] start
						 */

						currentComponent = "tMap_1";

						/**
						 * [tMap_1 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 process_data_end ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 end ] start
						 */

						currentComponent = "tDBInput_1";

					}
				} finally {
					if (rs_tDBInput_1 != null) {
						rs_tDBInput_1.close();
					}
					if (stmt_tDBInput_1 != null) {
						stmt_tDBInput_1.close();
					}
					if (conn_tDBInput_1 != null && !conn_tDBInput_1.isClosed()) {

						conn_tDBInput_1.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}

				}

				globalMap.put("tDBInput_1_NB_LINE", nb_line_tDBInput_1);

				ok_Hash.put("tDBInput_1", true);
				end_Hash.put("tDBInput_1", System.currentTimeMillis());

				/**
				 * [tDBInput_1 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row1");
				}

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

				/**
				 * [tLogRow_1 end ] start
				 */

				currentComponent = "tLogRow_1";

//////

				java.io.PrintStream consoleOut_tLogRow_1 = null;
				if (globalMap.get("tLogRow_CONSOLE") != null) {
					consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
				} else {
					consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
					globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_1);
				}

				consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
				consoleOut_tLogRow_1.flush();
//////
				globalMap.put("tLogRow_1_NB_LINE", nb_line_tLogRow_1);

///////////////////////    			

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "creditoComprometido");
				}

				ok_Hash.put("tLogRow_1", true);
				end_Hash.put("tLogRow_1", System.currentTimeMillis());

				/**
				 * [tLogRow_1 end ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 end ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (outtFileOutputDelimited_1 != null) {
					outtFileOutputDelimited_1.flush();
					outtFileOutputDelimited_1.close();
				}

				globalMap.put("tFileOutputDelimited_1_NB_LINE", nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);

				resourceMap.put("finish_tFileOutputDelimited_1", true);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row2");
				}

				ok_Hash.put("tFileOutputDelimited_1", true);
				end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				/**
				 * [tFileOutputDelimited_1 end ] stop
				 */

				/**
				 * [tFilterRow_1 end ] start
				 */

				currentComponent = "tFilterRow_1";

				globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
				globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
				globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "creditoRestante");
				}

				ok_Hash.put("tFilterRow_1", true);
				end_Hash.put("tFilterRow_1", System.currentTimeMillis());

				/**
				 * [tFilterRow_1 end ] stop
				 */

				/**
				 * [tSortRow_1_SortOut end ] start
				 */

				currentVirtualComponent = "tSortRow_1";

				currentComponent = "tSortRow_1_SortOut";

				row3Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablerow3Struct[0]);

				java.util.Arrays.sort(array_tSortRow_1_SortOut);

				globalMap.put("tSortRow_1", array_tSortRow_1_SortOut);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row3");
				}

				ok_Hash.put("tSortRow_1_SortOut", true);
				end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());

				/**
				 * [tSortRow_1_SortOut end ] stop
				 */

				/**
				 * [tFileOutputJSON_1 begin ] start
				 */

				ok_Hash.put("tFileOutputJSON_1", false);
				start_Hash.put("tFileOutputJSON_1", System.currentTimeMillis());

				currentComponent = "tFileOutputJSON_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row6");
				}

				int tos_count_tFileOutputJSON_1 = 0;

				int nb_line_tFileOutputJSON_1 = 0;
				java.io.File file_tFileOutputJSON_1 = new java.io.File(
						"C:/Users/FamiliaNatelloMedina/Documents/UNLu/AYI ACADEMI/Modulo 5/SALIDA/ProcessingData/totalRestante.json");
				java.io.File dir_tFileOutputJSON_1 = file_tFileOutputJSON_1.getParentFile();
				if (dir_tFileOutputJSON_1 != null && !dir_tFileOutputJSON_1.exists()) {
					dir_tFileOutputJSON_1.mkdirs();
				}
				java.io.PrintWriter outtFileOutputJSON_1 = new java.io.PrintWriter(
						new java.io.BufferedWriter(new java.io.FileWriter(
								"C:/Users/FamiliaNatelloMedina/Documents/UNLu/AYI ACADEMI/Modulo 5/SALIDA/ProcessingData/totalRestante.json")));
				outtFileOutputJSON_1.append("[");
				boolean isFirst_tFileOutputJSON_1 = true;

				/**
				 * [tFileOutputJSON_1 begin ] stop
				 */

				/**
				 * [tLogRow_2 begin ] start
				 */

				ok_Hash.put("tLogRow_2", false);
				start_Hash.put("tLogRow_2", System.currentTimeMillis());

				currentComponent = "tLogRow_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row5");
				}

				int tos_count_tLogRow_2 = 0;

				///////////////////////

				class Util_tLogRow_2 {

					String[] des_top = { ".", ".", "-", "+" };

					String[] des_head = { "|=", "=|", "-", "+" };

					String[] des_bottom = { "'", "'", "-", "+" };

					String name = "";

					java.util.List<String[]> list = new java.util.ArrayList<String[]>();

					int[] colLengths = new int[58];

					public void addRow(String[] row) {

						for (int i = 0; i < 58; i++) {
							if (row[i] != null) {
								colLengths[i] = Math.max(colLengths[i], row[i].length());
							}
						}
						list.add(row);
					}

					public void setTableName(String name) {

						this.name = name;
					}

					public StringBuilder format() {

						StringBuilder sb = new StringBuilder();

						sb.append(print(des_top));

						int totals = 0;
						for (int i = 0; i < colLengths.length; i++) {
							totals = totals + colLengths[i];
						}

						// name
						sb.append("|");
						int k = 0;
						for (k = 0; k < (totals + 57 - name.length()) / 2; k++) {
							sb.append(' ');
						}
						sb.append(name);
						for (int i = 0; i < totals + 57 - name.length() - k; i++) {
							sb.append(' ');
						}
						sb.append("|\n");

						// head and rows
						sb.append(print(des_head));
						for (int i = 0; i < list.size(); i++) {

							String[] row = list.get(i);

							java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());

							StringBuilder sbformat = new StringBuilder();
							sbformat.append("|%1$-");
							sbformat.append(colLengths[0]);
							sbformat.append("s");

							sbformat.append("|%2$-");
							sbformat.append(colLengths[1]);
							sbformat.append("s");

							sbformat.append("|%3$-");
							sbformat.append(colLengths[2]);
							sbformat.append("s");

							sbformat.append("|%4$-");
							sbformat.append(colLengths[3]);
							sbformat.append("s");

							sbformat.append("|%5$-");
							sbformat.append(colLengths[4]);
							sbformat.append("s");

							sbformat.append("|%6$-");
							sbformat.append(colLengths[5]);
							sbformat.append("s");

							sbformat.append("|%7$-");
							sbformat.append(colLengths[6]);
							sbformat.append("s");

							sbformat.append("|%8$-");
							sbformat.append(colLengths[7]);
							sbformat.append("s");

							sbformat.append("|%9$-");
							sbformat.append(colLengths[8]);
							sbformat.append("s");

							sbformat.append("|%10$-");
							sbformat.append(colLengths[9]);
							sbformat.append("s");

							sbformat.append("|%11$-");
							sbformat.append(colLengths[10]);
							sbformat.append("s");

							sbformat.append("|%12$-");
							sbformat.append(colLengths[11]);
							sbformat.append("s");

							sbformat.append("|%13$-");
							sbformat.append(colLengths[12]);
							sbformat.append("s");

							sbformat.append("|%14$-");
							sbformat.append(colLengths[13]);
							sbformat.append("s");

							sbformat.append("|%15$-");
							sbformat.append(colLengths[14]);
							sbformat.append("s");

							sbformat.append("|%16$-");
							sbformat.append(colLengths[15]);
							sbformat.append("s");

							sbformat.append("|%17$-");
							sbformat.append(colLengths[16]);
							sbformat.append("s");

							sbformat.append("|%18$-");
							sbformat.append(colLengths[17]);
							sbformat.append("s");

							sbformat.append("|%19$-");
							sbformat.append(colLengths[18]);
							sbformat.append("s");

							sbformat.append("|%20$-");
							sbformat.append(colLengths[19]);
							sbformat.append("s");

							sbformat.append("|%21$-");
							sbformat.append(colLengths[20]);
							sbformat.append("s");

							sbformat.append("|%22$-");
							sbformat.append(colLengths[21]);
							sbformat.append("s");

							sbformat.append("|%23$-");
							sbformat.append(colLengths[22]);
							sbformat.append("s");

							sbformat.append("|%24$-");
							sbformat.append(colLengths[23]);
							sbformat.append("s");

							sbformat.append("|%25$-");
							sbformat.append(colLengths[24]);
							sbformat.append("s");

							sbformat.append("|%26$-");
							sbformat.append(colLengths[25]);
							sbformat.append("s");

							sbformat.append("|%27$-");
							sbformat.append(colLengths[26]);
							sbformat.append("s");

							sbformat.append("|%28$-");
							sbformat.append(colLengths[27]);
							sbformat.append("s");

							sbformat.append("|%29$-");
							sbformat.append(colLengths[28]);
							sbformat.append("s");

							sbformat.append("|%30$-");
							sbformat.append(colLengths[29]);
							sbformat.append("s");

							sbformat.append("|%31$-");
							sbformat.append(colLengths[30]);
							sbformat.append("s");

							sbformat.append("|%32$-");
							sbformat.append(colLengths[31]);
							sbformat.append("s");

							sbformat.append("|%33$-");
							sbformat.append(colLengths[32]);
							sbformat.append("s");

							sbformat.append("|%34$-");
							sbformat.append(colLengths[33]);
							sbformat.append("s");

							sbformat.append("|%35$-");
							sbformat.append(colLengths[34]);
							sbformat.append("s");

							sbformat.append("|%36$-");
							sbformat.append(colLengths[35]);
							sbformat.append("s");

							sbformat.append("|%37$-");
							sbformat.append(colLengths[36]);
							sbformat.append("s");

							sbformat.append("|%38$-");
							sbformat.append(colLengths[37]);
							sbformat.append("s");

							sbformat.append("|%39$-");
							sbformat.append(colLengths[38]);
							sbformat.append("s");

							sbformat.append("|%40$-");
							sbformat.append(colLengths[39]);
							sbformat.append("s");

							sbformat.append("|%41$-");
							sbformat.append(colLengths[40]);
							sbformat.append("s");

							sbformat.append("|%42$-");
							sbformat.append(colLengths[41]);
							sbformat.append("s");

							sbformat.append("|%43$-");
							sbformat.append(colLengths[42]);
							sbformat.append("s");

							sbformat.append("|%44$-");
							sbformat.append(colLengths[43]);
							sbformat.append("s");

							sbformat.append("|%45$-");
							sbformat.append(colLengths[44]);
							sbformat.append("s");

							sbformat.append("|%46$-");
							sbformat.append(colLengths[45]);
							sbformat.append("s");

							sbformat.append("|%47$-");
							sbformat.append(colLengths[46]);
							sbformat.append("s");

							sbformat.append("|%48$-");
							sbformat.append(colLengths[47]);
							sbformat.append("s");

							sbformat.append("|%49$-");
							sbformat.append(colLengths[48]);
							sbformat.append("s");

							sbformat.append("|%50$-");
							sbformat.append(colLengths[49]);
							sbformat.append("s");

							sbformat.append("|%51$-");
							sbformat.append(colLengths[50]);
							sbformat.append("s");

							sbformat.append("|%52$-");
							sbformat.append(colLengths[51]);
							sbformat.append("s");

							sbformat.append("|%53$-");
							sbformat.append(colLengths[52]);
							sbformat.append("s");

							sbformat.append("|%54$-");
							sbformat.append(colLengths[53]);
							sbformat.append("s");

							sbformat.append("|%55$-");
							sbformat.append(colLengths[54]);
							sbformat.append("s");

							sbformat.append("|%56$-");
							sbformat.append(colLengths[55]);
							sbformat.append("s");

							sbformat.append("|%57$-");
							sbformat.append(colLengths[56]);
							sbformat.append("s");

							sbformat.append("|%58$-");
							sbformat.append(colLengths[57]);
							sbformat.append("s");

							sbformat.append("|\n");

							formatter.format(sbformat.toString(), (Object[]) row);

							sb.append(formatter.toString());
							if (i == 0)
								sb.append(print(des_head)); // print the head
						}

						// end
						sb.append(print(des_bottom));
						return sb;
					}

					private StringBuilder print(String[] fillChars) {
						StringBuilder sb = new StringBuilder();
						// first column
						sb.append(fillChars[0]);
						for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[9] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[10] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[11] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[12] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[13] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[14] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[15] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[16] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[17] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[18] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[19] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[20] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[21] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[22] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[23] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[24] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[25] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[26] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[27] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[28] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[29] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[30] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[31] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[32] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[33] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[34] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[35] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[36] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[37] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[38] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[39] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[40] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[41] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[42] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[43] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[44] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[45] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[46] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[47] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[48] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[49] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[50] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[51] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[52] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[53] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[54] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[55] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[56] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						// last column
						for (int i = 0; i < colLengths[57] - fillChars[1].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[1]);
						sb.append("\n");
						return sb;
					}

					public boolean isTableEmpty() {
						if (list.size() > 1)
							return false;
						return true;
					}
				}
				Util_tLogRow_2 util_tLogRow_2 = new Util_tLogRow_2();
				util_tLogRow_2.setTableName("tLogRow_2");
				util_tLogRow_2.addRow(new String[] { "creditoRestante", "impacto_presupuestario_anio",
						"impacto_presupuestario_mes", "ejercicio_presupuestario", "sector_id", "sector_desc",
						"subsector_id", "subsector_desc", "caracter_id", "caracter_desc", "jurisdiccion_id",
						"jurisdiccion_desc", "subjurisdiccion_id", "subjurisdiccion_desc", "entidad_id", "entidad_desc",
						"servicio_id", "servicio_desc", "programa_id", "programa_desc", "subprograma_id",
						"subprograma_desc", "proyecto_id", "proyecto_desc", "actividad_id", "actividad_desc", "obra_id",
						"obra_desc", "finalidad_id", "finalidad_desc", "funcion_id", "funcion_desc", "inciso_id",
						"inciso_desc", "principal_id", "principal_desc", "parcial_id", "parcial_desc", "subparcial_id",
						"subparcial_desc", "clasificador_economico_8_digitos_id",
						"clasificador_economico_8_digitos_desc", "fuente_financiamiento_id",
						"fuente_financiamiento_desc", "ubicacion_geografica_id", "ubicacion_geografica_desc",
						"unidad_ejecutora_id", "unidad_ejecutora_desc", "prestamo_externo_id", "prestamo_externo_desc",
						"codigo_bapin_id", "codigo_bapin_desc", "credito_presupuestado", "credito_vigente",
						"credito_comprometido", "credito_devengado", "credito_pagado", "ultima_actualizacion_fecha", });
				StringBuilder strBuffer_tLogRow_2 = null;
				int nb_line_tLogRow_2 = 0;
///////////////////////    			

				/**
				 * [tLogRow_2 begin ] stop
				 */

				/**
				 * [tSampleRow_1 begin ] start
				 */

				ok_Hash.put("tSampleRow_1", false);
				start_Hash.put("tSampleRow_1", System.currentTimeMillis());

				currentComponent = "tSampleRow_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row4");
				}

				int tos_count_tSampleRow_1 = 0;

				String[] rangetSampleRow_1 = "1..10".split(",");
				java.util.Set rangeSettSampleRow_1 = new java.util.HashSet();

				Integer nb_line_tSampleRow_1 = 0;

				for (int i = 0; i < rangetSampleRow_1.length; i++) {

					if (rangetSampleRow_1[i].matches("\\d+")) {

						rangeSettSampleRow_1.add(Integer.valueOf(rangetSampleRow_1[i]));

					} else if (rangetSampleRow_1[i].matches("\\d+\\.\\.\\d+")) {

						String[] edgetSampleRow_1 = rangetSampleRow_1[i].split("\\.\\.");

						for (int j = Integer.valueOf(edgetSampleRow_1[0]).intValue(); j < Integer
								.valueOf(edgetSampleRow_1[1]).intValue() + 1; j++) {
							rangeSettSampleRow_1.add(Integer.valueOf(j));
						}
					} else {

					}

				}

				/**
				 * [tSampleRow_1 begin ] stop
				 */

				/**
				 * [tSortRow_1_SortIn begin ] start
				 */

				ok_Hash.put("tSortRow_1_SortIn", false);
				start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());

				currentVirtualComponent = "tSortRow_1";

				currentComponent = "tSortRow_1_SortIn";

				int tos_count_tSortRow_1_SortIn = 0;

				row3Struct[] array_tSortRow_1_SortIn = (row3Struct[]) globalMap.remove("tSortRow_1");

				int nb_line_tSortRow_1_SortIn = 0;

				row3Struct current_tSortRow_1_SortIn = null;

				for (int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++) {
					current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
					row4.creditoRestante = current_tSortRow_1_SortIn.creditoRestante;
					row4.impacto_presupuestario_anio = current_tSortRow_1_SortIn.impacto_presupuestario_anio;
					row4.impacto_presupuestario_mes = current_tSortRow_1_SortIn.impacto_presupuestario_mes;
					row4.ejercicio_presupuestario = current_tSortRow_1_SortIn.ejercicio_presupuestario;
					row4.sector_id = current_tSortRow_1_SortIn.sector_id;
					row4.sector_desc = current_tSortRow_1_SortIn.sector_desc;
					row4.subsector_id = current_tSortRow_1_SortIn.subsector_id;
					row4.subsector_desc = current_tSortRow_1_SortIn.subsector_desc;
					row4.caracter_id = current_tSortRow_1_SortIn.caracter_id;
					row4.caracter_desc = current_tSortRow_1_SortIn.caracter_desc;
					row4.jurisdiccion_id = current_tSortRow_1_SortIn.jurisdiccion_id;
					row4.jurisdiccion_desc = current_tSortRow_1_SortIn.jurisdiccion_desc;
					row4.subjurisdiccion_id = current_tSortRow_1_SortIn.subjurisdiccion_id;
					row4.subjurisdiccion_desc = current_tSortRow_1_SortIn.subjurisdiccion_desc;
					row4.entidad_id = current_tSortRow_1_SortIn.entidad_id;
					row4.entidad_desc = current_tSortRow_1_SortIn.entidad_desc;
					row4.servicio_id = current_tSortRow_1_SortIn.servicio_id;
					row4.servicio_desc = current_tSortRow_1_SortIn.servicio_desc;
					row4.programa_id = current_tSortRow_1_SortIn.programa_id;
					row4.programa_desc = current_tSortRow_1_SortIn.programa_desc;
					row4.subprograma_id = current_tSortRow_1_SortIn.subprograma_id;
					row4.subprograma_desc = current_tSortRow_1_SortIn.subprograma_desc;
					row4.proyecto_id = current_tSortRow_1_SortIn.proyecto_id;
					row4.proyecto_desc = current_tSortRow_1_SortIn.proyecto_desc;
					row4.actividad_id = current_tSortRow_1_SortIn.actividad_id;
					row4.actividad_desc = current_tSortRow_1_SortIn.actividad_desc;
					row4.obra_id = current_tSortRow_1_SortIn.obra_id;
					row4.obra_desc = current_tSortRow_1_SortIn.obra_desc;
					row4.finalidad_id = current_tSortRow_1_SortIn.finalidad_id;
					row4.finalidad_desc = current_tSortRow_1_SortIn.finalidad_desc;
					row4.funcion_id = current_tSortRow_1_SortIn.funcion_id;
					row4.funcion_desc = current_tSortRow_1_SortIn.funcion_desc;
					row4.inciso_id = current_tSortRow_1_SortIn.inciso_id;
					row4.inciso_desc = current_tSortRow_1_SortIn.inciso_desc;
					row4.principal_id = current_tSortRow_1_SortIn.principal_id;
					row4.principal_desc = current_tSortRow_1_SortIn.principal_desc;
					row4.parcial_id = current_tSortRow_1_SortIn.parcial_id;
					row4.parcial_desc = current_tSortRow_1_SortIn.parcial_desc;
					row4.subparcial_id = current_tSortRow_1_SortIn.subparcial_id;
					row4.subparcial_desc = current_tSortRow_1_SortIn.subparcial_desc;
					row4.clasificador_economico_8_digitos_id = current_tSortRow_1_SortIn.clasificador_economico_8_digitos_id;
					row4.clasificador_economico_8_digitos_desc = current_tSortRow_1_SortIn.clasificador_economico_8_digitos_desc;
					row4.fuente_financiamiento_id = current_tSortRow_1_SortIn.fuente_financiamiento_id;
					row4.fuente_financiamiento_desc = current_tSortRow_1_SortIn.fuente_financiamiento_desc;
					row4.ubicacion_geografica_id = current_tSortRow_1_SortIn.ubicacion_geografica_id;
					row4.ubicacion_geografica_desc = current_tSortRow_1_SortIn.ubicacion_geografica_desc;
					row4.unidad_ejecutora_id = current_tSortRow_1_SortIn.unidad_ejecutora_id;
					row4.unidad_ejecutora_desc = current_tSortRow_1_SortIn.unidad_ejecutora_desc;
					row4.prestamo_externo_id = current_tSortRow_1_SortIn.prestamo_externo_id;
					row4.prestamo_externo_desc = current_tSortRow_1_SortIn.prestamo_externo_desc;
					row4.codigo_bapin_id = current_tSortRow_1_SortIn.codigo_bapin_id;
					row4.codigo_bapin_desc = current_tSortRow_1_SortIn.codigo_bapin_desc;
					row4.credito_presupuestado = current_tSortRow_1_SortIn.credito_presupuestado;
					row4.credito_vigente = current_tSortRow_1_SortIn.credito_vigente;
					row4.credito_comprometido = current_tSortRow_1_SortIn.credito_comprometido;
					row4.credito_devengado = current_tSortRow_1_SortIn.credito_devengado;
					row4.credito_pagado = current_tSortRow_1_SortIn.credito_pagado;
					row4.ultima_actualizacion_fecha = current_tSortRow_1_SortIn.ultima_actualizacion_fecha;
					// increase number of line sorted
					nb_line_tSortRow_1_SortIn++;

					/**
					 * [tSortRow_1_SortIn begin ] stop
					 */

					/**
					 * [tSortRow_1_SortIn main ] start
					 */

					currentVirtualComponent = "tSortRow_1";

					currentComponent = "tSortRow_1_SortIn";

					tos_count_tSortRow_1_SortIn++;

					/**
					 * [tSortRow_1_SortIn main ] stop
					 */

					/**
					 * [tSortRow_1_SortIn process_data_begin ] start
					 */

					currentVirtualComponent = "tSortRow_1";

					currentComponent = "tSortRow_1_SortIn";

					/**
					 * [tSortRow_1_SortIn process_data_begin ] stop
					 */

					/**
					 * [tSampleRow_1 main ] start
					 */

					currentComponent = "tSampleRow_1";

					if (execStat) {
						runStat.updateStatOnConnection(iterateId, 1, 1, "row4");
					}

					nb_line_tSampleRow_1++;

					if (!rangeSettSampleRow_1.contains(nb_line_tSampleRow_1)) {
						row5 = null;
					} else {
						row5 = new row5Struct();

						row5.creditoRestante = row4.creditoRestante;

						row5.impacto_presupuestario_anio = row4.impacto_presupuestario_anio;

						row5.impacto_presupuestario_mes = row4.impacto_presupuestario_mes;

						row5.ejercicio_presupuestario = row4.ejercicio_presupuestario;

						row5.sector_id = row4.sector_id;

						row5.sector_desc = row4.sector_desc;

						row5.subsector_id = row4.subsector_id;

						row5.subsector_desc = row4.subsector_desc;

						row5.caracter_id = row4.caracter_id;

						row5.caracter_desc = row4.caracter_desc;

						row5.jurisdiccion_id = row4.jurisdiccion_id;

						row5.jurisdiccion_desc = row4.jurisdiccion_desc;

						row5.subjurisdiccion_id = row4.subjurisdiccion_id;

						row5.subjurisdiccion_desc = row4.subjurisdiccion_desc;

						row5.entidad_id = row4.entidad_id;

						row5.entidad_desc = row4.entidad_desc;

						row5.servicio_id = row4.servicio_id;

						row5.servicio_desc = row4.servicio_desc;

						row5.programa_id = row4.programa_id;

						row5.programa_desc = row4.programa_desc;

						row5.subprograma_id = row4.subprograma_id;

						row5.subprograma_desc = row4.subprograma_desc;

						row5.proyecto_id = row4.proyecto_id;

						row5.proyecto_desc = row4.proyecto_desc;

						row5.actividad_id = row4.actividad_id;

						row5.actividad_desc = row4.actividad_desc;

						row5.obra_id = row4.obra_id;

						row5.obra_desc = row4.obra_desc;

						row5.finalidad_id = row4.finalidad_id;

						row5.finalidad_desc = row4.finalidad_desc;

						row5.funcion_id = row4.funcion_id;

						row5.funcion_desc = row4.funcion_desc;

						row5.inciso_id = row4.inciso_id;

						row5.inciso_desc = row4.inciso_desc;

						row5.principal_id = row4.principal_id;

						row5.principal_desc = row4.principal_desc;

						row5.parcial_id = row4.parcial_id;

						row5.parcial_desc = row4.parcial_desc;

						row5.subparcial_id = row4.subparcial_id;

						row5.subparcial_desc = row4.subparcial_desc;

						row5.clasificador_economico_8_digitos_id = row4.clasificador_economico_8_digitos_id;

						row5.clasificador_economico_8_digitos_desc = row4.clasificador_economico_8_digitos_desc;

						row5.fuente_financiamiento_id = row4.fuente_financiamiento_id;

						row5.fuente_financiamiento_desc = row4.fuente_financiamiento_desc;

						row5.ubicacion_geografica_id = row4.ubicacion_geografica_id;

						row5.ubicacion_geografica_desc = row4.ubicacion_geografica_desc;

						row5.unidad_ejecutora_id = row4.unidad_ejecutora_id;

						row5.unidad_ejecutora_desc = row4.unidad_ejecutora_desc;

						row5.prestamo_externo_id = row4.prestamo_externo_id;

						row5.prestamo_externo_desc = row4.prestamo_externo_desc;

						row5.codigo_bapin_id = row4.codigo_bapin_id;

						row5.codigo_bapin_desc = row4.codigo_bapin_desc;

						row5.credito_presupuestado = row4.credito_presupuestado;

						row5.credito_vigente = row4.credito_vigente;

						row5.credito_comprometido = row4.credito_comprometido;

						row5.credito_devengado = row4.credito_devengado;

						row5.credito_pagado = row4.credito_pagado;

						row5.ultima_actualizacion_fecha = row4.ultima_actualizacion_fecha;

					}

					tos_count_tSampleRow_1++;

					/**
					 * [tSampleRow_1 main ] stop
					 */

					/**
					 * [tSampleRow_1 process_data_begin ] start
					 */

					currentComponent = "tSampleRow_1";

					/**
					 * [tSampleRow_1 process_data_begin ] stop
					 */
// Start of branch "row5"
					if (row5 != null) {

						/**
						 * [tLogRow_2 main ] start
						 */

						currentComponent = "tLogRow_2";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1, "row5");
						}

///////////////////////		

						String[] row_tLogRow_2 = new String[58];

						if (row5.creditoRestante != null) { //
							row_tLogRow_2[0] = FormatterUtils.formatUnwithE(row5.creditoRestante);

						} //

						if (row5.impacto_presupuestario_anio != null) { //
							row_tLogRow_2[1] = String.valueOf(row5.impacto_presupuestario_anio);

						} //

						if (row5.impacto_presupuestario_mes != null) { //
							row_tLogRow_2[2] = String.valueOf(row5.impacto_presupuestario_mes);

						} //

						if (row5.ejercicio_presupuestario != null) { //
							row_tLogRow_2[3] = String.valueOf(row5.ejercicio_presupuestario);

						} //

						if (row5.sector_id != null) { //
							row_tLogRow_2[4] = String.valueOf(row5.sector_id);

						} //

						if (row5.sector_desc != null) { //
							row_tLogRow_2[5] = String.valueOf(row5.sector_desc);

						} //

						if (row5.subsector_id != null) { //
							row_tLogRow_2[6] = String.valueOf(row5.subsector_id);

						} //

						if (row5.subsector_desc != null) { //
							row_tLogRow_2[7] = String.valueOf(row5.subsector_desc);

						} //

						if (row5.caracter_id != null) { //
							row_tLogRow_2[8] = String.valueOf(row5.caracter_id);

						} //

						if (row5.caracter_desc != null) { //
							row_tLogRow_2[9] = String.valueOf(row5.caracter_desc);

						} //

						if (row5.jurisdiccion_id != null) { //
							row_tLogRow_2[10] = String.valueOf(row5.jurisdiccion_id);

						} //

						if (row5.jurisdiccion_desc != null) { //
							row_tLogRow_2[11] = String.valueOf(row5.jurisdiccion_desc);

						} //

						if (row5.subjurisdiccion_id != null) { //
							row_tLogRow_2[12] = String.valueOf(row5.subjurisdiccion_id);

						} //

						if (row5.subjurisdiccion_desc != null) { //
							row_tLogRow_2[13] = String.valueOf(row5.subjurisdiccion_desc);

						} //

						if (row5.entidad_id != null) { //
							row_tLogRow_2[14] = String.valueOf(row5.entidad_id);

						} //

						if (row5.entidad_desc != null) { //
							row_tLogRow_2[15] = String.valueOf(row5.entidad_desc);

						} //

						if (row5.servicio_id != null) { //
							row_tLogRow_2[16] = String.valueOf(row5.servicio_id);

						} //

						if (row5.servicio_desc != null) { //
							row_tLogRow_2[17] = String.valueOf(row5.servicio_desc);

						} //

						if (row5.programa_id != null) { //
							row_tLogRow_2[18] = String.valueOf(row5.programa_id);

						} //

						if (row5.programa_desc != null) { //
							row_tLogRow_2[19] = String.valueOf(row5.programa_desc);

						} //

						if (row5.subprograma_id != null) { //
							row_tLogRow_2[20] = String.valueOf(row5.subprograma_id);

						} //

						if (row5.subprograma_desc != null) { //
							row_tLogRow_2[21] = String.valueOf(row5.subprograma_desc);

						} //

						if (row5.proyecto_id != null) { //
							row_tLogRow_2[22] = String.valueOf(row5.proyecto_id);

						} //

						if (row5.proyecto_desc != null) { //
							row_tLogRow_2[23] = String.valueOf(row5.proyecto_desc);

						} //

						if (row5.actividad_id != null) { //
							row_tLogRow_2[24] = String.valueOf(row5.actividad_id);

						} //

						if (row5.actividad_desc != null) { //
							row_tLogRow_2[25] = String.valueOf(row5.actividad_desc);

						} //

						if (row5.obra_id != null) { //
							row_tLogRow_2[26] = String.valueOf(row5.obra_id);

						} //

						if (row5.obra_desc != null) { //
							row_tLogRow_2[27] = String.valueOf(row5.obra_desc);

						} //

						if (row5.finalidad_id != null) { //
							row_tLogRow_2[28] = String.valueOf(row5.finalidad_id);

						} //

						if (row5.finalidad_desc != null) { //
							row_tLogRow_2[29] = String.valueOf(row5.finalidad_desc);

						} //

						if (row5.funcion_id != null) { //
							row_tLogRow_2[30] = String.valueOf(row5.funcion_id);

						} //

						if (row5.funcion_desc != null) { //
							row_tLogRow_2[31] = String.valueOf(row5.funcion_desc);

						} //

						if (row5.inciso_id != null) { //
							row_tLogRow_2[32] = String.valueOf(row5.inciso_id);

						} //

						if (row5.inciso_desc != null) { //
							row_tLogRow_2[33] = String.valueOf(row5.inciso_desc);

						} //

						if (row5.principal_id != null) { //
							row_tLogRow_2[34] = String.valueOf(row5.principal_id);

						} //

						if (row5.principal_desc != null) { //
							row_tLogRow_2[35] = String.valueOf(row5.principal_desc);

						} //

						if (row5.parcial_id != null) { //
							row_tLogRow_2[36] = String.valueOf(row5.parcial_id);

						} //

						if (row5.parcial_desc != null) { //
							row_tLogRow_2[37] = String.valueOf(row5.parcial_desc);

						} //

						if (row5.subparcial_id != null) { //
							row_tLogRow_2[38] = String.valueOf(row5.subparcial_id);

						} //

						if (row5.subparcial_desc != null) { //
							row_tLogRow_2[39] = String.valueOf(row5.subparcial_desc);

						} //

						if (row5.clasificador_economico_8_digitos_id != null) { //
							row_tLogRow_2[40] = String.valueOf(row5.clasificador_economico_8_digitos_id);

						} //

						if (row5.clasificador_economico_8_digitos_desc != null) { //
							row_tLogRow_2[41] = String.valueOf(row5.clasificador_economico_8_digitos_desc);

						} //

						if (row5.fuente_financiamiento_id != null) { //
							row_tLogRow_2[42] = FormatterUtils.formatUnwithE(row5.fuente_financiamiento_id);

						} //

						if (row5.fuente_financiamiento_desc != null) { //
							row_tLogRow_2[43] = String.valueOf(row5.fuente_financiamiento_desc);

						} //

						if (row5.ubicacion_geografica_id != null) { //
							row_tLogRow_2[44] = String.valueOf(row5.ubicacion_geografica_id);

						} //

						if (row5.ubicacion_geografica_desc != null) { //
							row_tLogRow_2[45] = String.valueOf(row5.ubicacion_geografica_desc);

						} //

						if (row5.unidad_ejecutora_id != null) { //
							row_tLogRow_2[46] = String.valueOf(row5.unidad_ejecutora_id);

						} //

						if (row5.unidad_ejecutora_desc != null) { //
							row_tLogRow_2[47] = String.valueOf(row5.unidad_ejecutora_desc);

						} //

						if (row5.prestamo_externo_id != null) { //
							row_tLogRow_2[48] = String.valueOf(row5.prestamo_externo_id);

						} //

						if (row5.prestamo_externo_desc != null) { //
							row_tLogRow_2[49] = String.valueOf(row5.prestamo_externo_desc);

						} //

						if (row5.codigo_bapin_id != null) { //
							row_tLogRow_2[50] = String.valueOf(row5.codigo_bapin_id);

						} //

						if (row5.codigo_bapin_desc != null) { //
							row_tLogRow_2[51] = String.valueOf(row5.codigo_bapin_desc);

						} //

						if (row5.credito_presupuestado != null) { //
							row_tLogRow_2[52] = String.valueOf(row5.credito_presupuestado);

						} //

						if (row5.credito_vigente != null) { //
							row_tLogRow_2[53] = String.valueOf(row5.credito_vigente);

						} //

						if (row5.credito_comprometido != null) { //
							row_tLogRow_2[54] = String.valueOf(row5.credito_comprometido);

						} //

						if (row5.credito_devengado != null) { //
							row_tLogRow_2[55] = String.valueOf(row5.credito_devengado);

						} //

						if (row5.credito_pagado != null) { //
							row_tLogRow_2[56] = String.valueOf(row5.credito_pagado);

						} //

						if (row5.ultima_actualizacion_fecha != null) { //
							row_tLogRow_2[57] = String.valueOf(row5.ultima_actualizacion_fecha);

						} //

						util_tLogRow_2.addRow(row_tLogRow_2);
						nb_line_tLogRow_2++;
//////

//////                    

///////////////////////    			

						row6 = row5;

						tos_count_tLogRow_2++;

						/**
						 * [tLogRow_2 main ] stop
						 */

						/**
						 * [tLogRow_2 process_data_begin ] start
						 */

						currentComponent = "tLogRow_2";

						/**
						 * [tLogRow_2 process_data_begin ] stop
						 */

						/**
						 * [tFileOutputJSON_1 main ] start
						 */

						currentComponent = "tFileOutputJSON_1";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1, "row6");
						}

						org.json.simple.JSONObject jsonRowtFileOutputJSON_1 = new org.json.simple.JSONObject();
						if (row6.creditoRestante != null) {

							jsonRowtFileOutputJSON_1.put("creditoRestante", row6.creditoRestante);

						} else {
							jsonRowtFileOutputJSON_1.put("creditoRestante", null);
						}

						if (row6.impacto_presupuestario_anio != null) {

							jsonRowtFileOutputJSON_1.put("impacto_presupuestario_anio",
									row6.impacto_presupuestario_anio);

						} else {
							jsonRowtFileOutputJSON_1.put("impacto_presupuestario_anio", null);
						}

						if (row6.impacto_presupuestario_mes != null) {

							jsonRowtFileOutputJSON_1.put("impacto_presupuestario_mes", row6.impacto_presupuestario_mes);

						} else {
							jsonRowtFileOutputJSON_1.put("impacto_presupuestario_mes", null);
						}

						if (row6.ejercicio_presupuestario != null) {

							jsonRowtFileOutputJSON_1.put("ejercicio_presupuestario", row6.ejercicio_presupuestario);

						} else {
							jsonRowtFileOutputJSON_1.put("ejercicio_presupuestario", null);
						}

						if (row6.sector_id != null) {

							jsonRowtFileOutputJSON_1.put("sector_id", row6.sector_id);

						} else {
							jsonRowtFileOutputJSON_1.put("sector_id", null);
						}

						if (row6.sector_desc != null) {

							jsonRowtFileOutputJSON_1.put("sector_desc", row6.sector_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("sector_desc", null);
						}

						if (row6.subsector_id != null) {

							jsonRowtFileOutputJSON_1.put("subsector_id", row6.subsector_id);

						} else {
							jsonRowtFileOutputJSON_1.put("subsector_id", null);
						}

						if (row6.subsector_desc != null) {

							jsonRowtFileOutputJSON_1.put("subsector_desc", row6.subsector_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("subsector_desc", null);
						}

						if (row6.caracter_id != null) {

							jsonRowtFileOutputJSON_1.put("caracter_id", row6.caracter_id);

						} else {
							jsonRowtFileOutputJSON_1.put("caracter_id", null);
						}

						if (row6.caracter_desc != null) {

							jsonRowtFileOutputJSON_1.put("caracter_desc", row6.caracter_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("caracter_desc", null);
						}

						if (row6.jurisdiccion_id != null) {

							jsonRowtFileOutputJSON_1.put("jurisdiccion_id", row6.jurisdiccion_id);

						} else {
							jsonRowtFileOutputJSON_1.put("jurisdiccion_id", null);
						}

						if (row6.jurisdiccion_desc != null) {

							jsonRowtFileOutputJSON_1.put("jurisdiccion_desc", row6.jurisdiccion_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("jurisdiccion_desc", null);
						}

						if (row6.subjurisdiccion_id != null) {

							jsonRowtFileOutputJSON_1.put("subjurisdiccion_id", row6.subjurisdiccion_id);

						} else {
							jsonRowtFileOutputJSON_1.put("subjurisdiccion_id", null);
						}

						if (row6.subjurisdiccion_desc != null) {

							jsonRowtFileOutputJSON_1.put("subjurisdiccion_desc", row6.subjurisdiccion_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("subjurisdiccion_desc", null);
						}

						if (row6.entidad_id != null) {

							jsonRowtFileOutputJSON_1.put("entidad_id", row6.entidad_id);

						} else {
							jsonRowtFileOutputJSON_1.put("entidad_id", null);
						}

						if (row6.entidad_desc != null) {

							jsonRowtFileOutputJSON_1.put("entidad_desc", row6.entidad_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("entidad_desc", null);
						}

						if (row6.servicio_id != null) {

							jsonRowtFileOutputJSON_1.put("servicio_id", row6.servicio_id);

						} else {
							jsonRowtFileOutputJSON_1.put("servicio_id", null);
						}

						if (row6.servicio_desc != null) {

							jsonRowtFileOutputJSON_1.put("servicio_desc", row6.servicio_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("servicio_desc", null);
						}

						if (row6.programa_id != null) {

							jsonRowtFileOutputJSON_1.put("programa_id", row6.programa_id);

						} else {
							jsonRowtFileOutputJSON_1.put("programa_id", null);
						}

						if (row6.programa_desc != null) {

							jsonRowtFileOutputJSON_1.put("programa_desc", row6.programa_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("programa_desc", null);
						}

						if (row6.subprograma_id != null) {

							jsonRowtFileOutputJSON_1.put("subprograma_id", row6.subprograma_id);

						} else {
							jsonRowtFileOutputJSON_1.put("subprograma_id", null);
						}

						if (row6.subprograma_desc != null) {

							jsonRowtFileOutputJSON_1.put("subprograma_desc", row6.subprograma_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("subprograma_desc", null);
						}

						if (row6.proyecto_id != null) {

							jsonRowtFileOutputJSON_1.put("proyecto_id", row6.proyecto_id);

						} else {
							jsonRowtFileOutputJSON_1.put("proyecto_id", null);
						}

						if (row6.proyecto_desc != null) {

							jsonRowtFileOutputJSON_1.put("proyecto_desc", row6.proyecto_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("proyecto_desc", null);
						}

						if (row6.actividad_id != null) {

							jsonRowtFileOutputJSON_1.put("actividad_id", row6.actividad_id);

						} else {
							jsonRowtFileOutputJSON_1.put("actividad_id", null);
						}

						if (row6.actividad_desc != null) {

							jsonRowtFileOutputJSON_1.put("actividad_desc", row6.actividad_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("actividad_desc", null);
						}

						if (row6.obra_id != null) {

							jsonRowtFileOutputJSON_1.put("obra_id", row6.obra_id);

						} else {
							jsonRowtFileOutputJSON_1.put("obra_id", null);
						}

						if (row6.obra_desc != null) {

							jsonRowtFileOutputJSON_1.put("obra_desc", row6.obra_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("obra_desc", null);
						}

						if (row6.finalidad_id != null) {

							jsonRowtFileOutputJSON_1.put("finalidad_id", row6.finalidad_id);

						} else {
							jsonRowtFileOutputJSON_1.put("finalidad_id", null);
						}

						if (row6.finalidad_desc != null) {

							jsonRowtFileOutputJSON_1.put("finalidad_desc", row6.finalidad_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("finalidad_desc", null);
						}

						if (row6.funcion_id != null) {

							jsonRowtFileOutputJSON_1.put("funcion_id", row6.funcion_id);

						} else {
							jsonRowtFileOutputJSON_1.put("funcion_id", null);
						}

						if (row6.funcion_desc != null) {

							jsonRowtFileOutputJSON_1.put("funcion_desc", row6.funcion_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("funcion_desc", null);
						}

						if (row6.inciso_id != null) {

							jsonRowtFileOutputJSON_1.put("inciso_id", row6.inciso_id);

						} else {
							jsonRowtFileOutputJSON_1.put("inciso_id", null);
						}

						if (row6.inciso_desc != null) {

							jsonRowtFileOutputJSON_1.put("inciso_desc", row6.inciso_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("inciso_desc", null);
						}

						if (row6.principal_id != null) {

							jsonRowtFileOutputJSON_1.put("principal_id", row6.principal_id);

						} else {
							jsonRowtFileOutputJSON_1.put("principal_id", null);
						}

						if (row6.principal_desc != null) {

							jsonRowtFileOutputJSON_1.put("principal_desc", row6.principal_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("principal_desc", null);
						}

						if (row6.parcial_id != null) {

							jsonRowtFileOutputJSON_1.put("parcial_id", row6.parcial_id);

						} else {
							jsonRowtFileOutputJSON_1.put("parcial_id", null);
						}

						if (row6.parcial_desc != null) {

							jsonRowtFileOutputJSON_1.put("parcial_desc", row6.parcial_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("parcial_desc", null);
						}

						if (row6.subparcial_id != null) {

							jsonRowtFileOutputJSON_1.put("subparcial_id", row6.subparcial_id);

						} else {
							jsonRowtFileOutputJSON_1.put("subparcial_id", null);
						}

						if (row6.subparcial_desc != null) {

							jsonRowtFileOutputJSON_1.put("subparcial_desc", row6.subparcial_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("subparcial_desc", null);
						}

						if (row6.clasificador_economico_8_digitos_id != null) {

							jsonRowtFileOutputJSON_1.put("clasificador_economico_8_digitos_id",
									row6.clasificador_economico_8_digitos_id);

						} else {
							jsonRowtFileOutputJSON_1.put("clasificador_economico_8_digitos_id", null);
						}

						if (row6.clasificador_economico_8_digitos_desc != null) {

							jsonRowtFileOutputJSON_1.put("clasificador_economico_8_digitos_desc",
									row6.clasificador_economico_8_digitos_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("clasificador_economico_8_digitos_desc", null);
						}

						if (row6.fuente_financiamiento_id != null) {

							jsonRowtFileOutputJSON_1.put("fuente_financiamiento_id", row6.fuente_financiamiento_id);

						} else {
							jsonRowtFileOutputJSON_1.put("fuente_financiamiento_id", null);
						}

						if (row6.fuente_financiamiento_desc != null) {

							jsonRowtFileOutputJSON_1.put("fuente_financiamiento_desc", row6.fuente_financiamiento_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("fuente_financiamiento_desc", null);
						}

						if (row6.ubicacion_geografica_id != null) {

							jsonRowtFileOutputJSON_1.put("ubicacion_geografica_id", row6.ubicacion_geografica_id);

						} else {
							jsonRowtFileOutputJSON_1.put("ubicacion_geografica_id", null);
						}

						if (row6.ubicacion_geografica_desc != null) {

							jsonRowtFileOutputJSON_1.put("ubicacion_geografica_desc", row6.ubicacion_geografica_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("ubicacion_geografica_desc", null);
						}

						if (row6.unidad_ejecutora_id != null) {

							jsonRowtFileOutputJSON_1.put("unidad_ejecutora_id", row6.unidad_ejecutora_id);

						} else {
							jsonRowtFileOutputJSON_1.put("unidad_ejecutora_id", null);
						}

						if (row6.unidad_ejecutora_desc != null) {

							jsonRowtFileOutputJSON_1.put("unidad_ejecutora_desc", row6.unidad_ejecutora_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("unidad_ejecutora_desc", null);
						}

						if (row6.prestamo_externo_id != null) {

							jsonRowtFileOutputJSON_1.put("prestamo_externo_id", row6.prestamo_externo_id);

						} else {
							jsonRowtFileOutputJSON_1.put("prestamo_externo_id", null);
						}

						if (row6.prestamo_externo_desc != null) {

							jsonRowtFileOutputJSON_1.put("prestamo_externo_desc", row6.prestamo_externo_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("prestamo_externo_desc", null);
						}

						if (row6.codigo_bapin_id != null) {

							jsonRowtFileOutputJSON_1.put("codigo_bapin_id", row6.codigo_bapin_id);

						} else {
							jsonRowtFileOutputJSON_1.put("codigo_bapin_id", null);
						}

						if (row6.codigo_bapin_desc != null) {

							jsonRowtFileOutputJSON_1.put("codigo_bapin_desc", row6.codigo_bapin_desc);

						} else {
							jsonRowtFileOutputJSON_1.put("codigo_bapin_desc", null);
						}

						if (row6.credito_presupuestado != null) {

							jsonRowtFileOutputJSON_1.put("credito_presupuestado", row6.credito_presupuestado);

						} else {
							jsonRowtFileOutputJSON_1.put("credito_presupuestado", null);
						}

						if (row6.credito_vigente != null) {

							jsonRowtFileOutputJSON_1.put("credito_vigente", row6.credito_vigente);

						} else {
							jsonRowtFileOutputJSON_1.put("credito_vigente", null);
						}

						if (row6.credito_comprometido != null) {

							jsonRowtFileOutputJSON_1.put("credito_comprometido", row6.credito_comprometido);

						} else {
							jsonRowtFileOutputJSON_1.put("credito_comprometido", null);
						}

						if (row6.credito_devengado != null) {

							jsonRowtFileOutputJSON_1.put("credito_devengado", row6.credito_devengado);

						} else {
							jsonRowtFileOutputJSON_1.put("credito_devengado", null);
						}

						if (row6.credito_pagado != null) {

							jsonRowtFileOutputJSON_1.put("credito_pagado", row6.credito_pagado);

						} else {
							jsonRowtFileOutputJSON_1.put("credito_pagado", null);
						}

						if (row6.ultima_actualizacion_fecha != null) {

							jsonRowtFileOutputJSON_1.put("ultima_actualizacion_fecha", row6.ultima_actualizacion_fecha);

						} else {
							jsonRowtFileOutputJSON_1.put("ultima_actualizacion_fecha", null);
						}

						if (!isFirst_tFileOutputJSON_1) {
							outtFileOutputJSON_1.append(",");
						}
						isFirst_tFileOutputJSON_1 = false;
						outtFileOutputJSON_1.append(jsonRowtFileOutputJSON_1.toJSONString());
						nb_line_tFileOutputJSON_1++;

						tos_count_tFileOutputJSON_1++;

						/**
						 * [tFileOutputJSON_1 main ] stop
						 */

						/**
						 * [tFileOutputJSON_1 process_data_begin ] start
						 */

						currentComponent = "tFileOutputJSON_1";

						/**
						 * [tFileOutputJSON_1 process_data_begin ] stop
						 */

						/**
						 * [tFileOutputJSON_1 process_data_end ] start
						 */

						currentComponent = "tFileOutputJSON_1";

						/**
						 * [tFileOutputJSON_1 process_data_end ] stop
						 */

						/**
						 * [tLogRow_2 process_data_end ] start
						 */

						currentComponent = "tLogRow_2";

						/**
						 * [tLogRow_2 process_data_end ] stop
						 */

					} // End of branch "row5"

					/**
					 * [tSampleRow_1 process_data_end ] start
					 */

					currentComponent = "tSampleRow_1";

					/**
					 * [tSampleRow_1 process_data_end ] stop
					 */

					/**
					 * [tSortRow_1_SortIn process_data_end ] start
					 */

					currentVirtualComponent = "tSortRow_1";

					currentComponent = "tSortRow_1_SortIn";

					/**
					 * [tSortRow_1_SortIn process_data_end ] stop
					 */

					/**
					 * [tSortRow_1_SortIn end ] start
					 */

					currentVirtualComponent = "tSortRow_1";

					currentComponent = "tSortRow_1_SortIn";

				}

				globalMap.put("tSortRow_1_SortIn_NB_LINE", nb_line_tSortRow_1_SortIn);

				ok_Hash.put("tSortRow_1_SortIn", true);
				end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());

				/**
				 * [tSortRow_1_SortIn end ] stop
				 */

				/**
				 * [tSampleRow_1 end ] start
				 */

				currentComponent = "tSampleRow_1";

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row4");
				}

				ok_Hash.put("tSampleRow_1", true);
				end_Hash.put("tSampleRow_1", System.currentTimeMillis());

				/**
				 * [tSampleRow_1 end ] stop
				 */

				/**
				 * [tLogRow_2 end ] start
				 */

				currentComponent = "tLogRow_2";

//////

				java.io.PrintStream consoleOut_tLogRow_2 = null;
				if (globalMap.get("tLogRow_CONSOLE") != null) {
					consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
				} else {
					consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
					globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_2);
				}

				consoleOut_tLogRow_2.println(util_tLogRow_2.format().toString());
				consoleOut_tLogRow_2.flush();
//////
				globalMap.put("tLogRow_2_NB_LINE", nb_line_tLogRow_2);

///////////////////////    			

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row5");
				}

				ok_Hash.put("tLogRow_2", true);
				end_Hash.put("tLogRow_2", System.currentTimeMillis());

				/**
				 * [tLogRow_2 end ] stop
				 */

				/**
				 * [tFileOutputJSON_1 end ] start
				 */

				currentComponent = "tFileOutputJSON_1";

				outtFileOutputJSON_1.print("]");
				outtFileOutputJSON_1.close();
				globalMap.put("tFileOutputJSON_1_NB_LINE", nb_line_tFileOutputJSON_1);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row6");
				}

				ok_Hash.put("tFileOutputJSON_1", true);
				end_Hash.put("tFileOutputJSON_1", System.currentTimeMillis());

				/**
				 * [tFileOutputJSON_1 end ] stop
				 */

				/**
				 * [tSortRow_2_SortOut end ] start
				 */

				currentVirtualComponent = "tSortRow_2";

				currentComponent = "tSortRow_2_SortOut";

				clasificadorStruct[] array_tSortRow_2_SortOut = list_tSortRow_2_SortOut
						.toArray(new ComparableclasificadorStruct[0]);

				java.util.Arrays.sort(array_tSortRow_2_SortOut);

				globalMap.put("tSortRow_2", array_tSortRow_2_SortOut);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "clasificador");
				}

				ok_Hash.put("tSortRow_2_SortOut", true);
				end_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());

				/**
				 * [tSortRow_2_SortOut end ] stop
				 */

				/**
				 * [tFileOutputDelimited_2 begin ] start
				 */

				ok_Hash.put("tFileOutputDelimited_2", false);
				start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());

				currentComponent = "tFileOutputDelimited_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row8");
				}

				int tos_count_tFileOutputDelimited_2 = 0;

				String fileName_tFileOutputDelimited_2 = "";
				fileName_tFileOutputDelimited_2 = (new java.io.File(
						"C:/Users/FamiliaNatelloMedina/Documents/UNLu/AYI ACADEMI/Modulo 5/SALIDA/ProcessingData/presupuesto.txt"))
								.getAbsolutePath().replace("\\", "/");
				String fullName_tFileOutputDelimited_2 = null;
				String extension_tFileOutputDelimited_2 = null;
				String directory_tFileOutputDelimited_2 = null;
				if ((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
					if (fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2
							.lastIndexOf("/")) {
						fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
						extension_tFileOutputDelimited_2 = "";
					} else {
						fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0,
								fileName_tFileOutputDelimited_2.lastIndexOf("."));
						extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2
								.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
					}
					directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0,
							fileName_tFileOutputDelimited_2.lastIndexOf("/"));
				} else {
					if (fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
						fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0,
								fileName_tFileOutputDelimited_2.lastIndexOf("."));
						extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2
								.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
					} else {
						fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
						extension_tFileOutputDelimited_2 = "";
					}
					directory_tFileOutputDelimited_2 = "";
				}
				boolean isFileGenerated_tFileOutputDelimited_2 = true;
				java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME", fileName_tFileOutputDelimited_2);
				int nb_line_tFileOutputDelimited_2 = 0;
				int splitedFileNo_tFileOutputDelimited_2 = 0;
				int currentRow_tFileOutputDelimited_2 = 0;

				final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */
						";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */
				;

				final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /**
																		 * Start field
																		 * tFileOutputDelimited_2:ROWSEPARATOR
																		 */
						"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */
				;

				// create directory only if not exists
				if (directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
					java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
					if (!dir_tFileOutputDelimited_2.exists()) {
						dir_tFileOutputDelimited_2.mkdirs();
					}
				}

				// routines.system.Row
				java.io.Writer outtFileOutputDelimited_2 = null;

				java.io.File fileToDelete_tFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
				if (fileToDelete_tFileOutputDelimited_2.exists()) {
					fileToDelete_tFileOutputDelimited_2.delete();
				}
				outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
						new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, false), "ISO-8859-15"));
				if (filetFileOutputDelimited_2.length() == 0) {
					outtFileOutputDelimited_2.write("presupuesto");
					outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
					outtFileOutputDelimited_2.flush();
				}

				resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
				resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

				/**
				 * [tFileOutputDelimited_2 begin ] stop
				 */

				/**
				 * [tLogRow_3 begin ] start
				 */

				ok_Hash.put("tLogRow_3", false);
				start_Hash.put("tLogRow_3", System.currentTimeMillis());

				currentComponent = "tLogRow_3";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row7");
				}

				int tos_count_tLogRow_3 = 0;

				///////////////////////

				class Util_tLogRow_3 {

					String[] des_top = { ".", ".", "-", "+" };

					String[] des_head = { "|=", "=|", "-", "+" };

					String[] des_bottom = { "'", "'", "-", "+" };

					String name = "";

					java.util.List<String[]> list = new java.util.ArrayList<String[]>();

					int[] colLengths = new int[1];

					public void addRow(String[] row) {

						for (int i = 0; i < 1; i++) {
							if (row[i] != null) {
								colLengths[i] = Math.max(colLengths[i], row[i].length());
							}
						}
						list.add(row);
					}

					public void setTableName(String name) {

						this.name = name;
					}

					public StringBuilder format() {

						StringBuilder sb = new StringBuilder();

						sb.append(print(des_top));

						int totals = 0;
						for (int i = 0; i < colLengths.length; i++) {
							totals = totals + colLengths[i];
						}

						// name
						sb.append("|");
						int k = 0;
						for (k = 0; k < (totals + 0 - name.length()) / 2; k++) {
							sb.append(' ');
						}
						sb.append(name);
						for (int i = 0; i < totals + 0 - name.length() - k; i++) {
							sb.append(' ');
						}
						sb.append("|\n");

						// head and rows
						sb.append(print(des_head));
						for (int i = 0; i < list.size(); i++) {

							String[] row = list.get(i);

							java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());

							StringBuilder sbformat = new StringBuilder();
							sbformat.append("|%1$-");
							sbformat.append(colLengths[0]);
							sbformat.append("s");

							sbformat.append("|\n");

							formatter.format(sbformat.toString(), (Object[]) row);

							sb.append(formatter.toString());
							if (i == 0)
								sb.append(print(des_head)); // print the head
						}

						// end
						sb.append(print(des_bottom));
						return sb;
					}

					private StringBuilder print(String[] fillChars) {
						StringBuilder sb = new StringBuilder();
						// first column
						sb.append(fillChars[0]);

						// last column
						for (int i = 0; i < colLengths[0] - fillChars[0].length() - fillChars[1].length() + 2; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[1]);
						sb.append("\n");
						return sb;
					}

					public boolean isTableEmpty() {
						if (list.size() > 1)
							return false;
						return true;
					}
				}
				Util_tLogRow_3 util_tLogRow_3 = new Util_tLogRow_3();
				util_tLogRow_3.setTableName("Consola");
				util_tLogRow_3.addRow(new String[] { "presupuesto", });
				StringBuilder strBuffer_tLogRow_3 = null;
				int nb_line_tLogRow_3 = 0;
///////////////////////    			

				/**
				 * [tLogRow_3 begin ] stop
				 */

				/**
				 * [tSortRow_2_SortIn begin ] start
				 */

				ok_Hash.put("tSortRow_2_SortIn", false);
				start_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());

				currentVirtualComponent = "tSortRow_2";

				currentComponent = "tSortRow_2_SortIn";

				int tos_count_tSortRow_2_SortIn = 0;

				clasificadorStruct[] array_tSortRow_2_SortIn = (clasificadorStruct[]) globalMap.remove("tSortRow_2");

				int nb_line_tSortRow_2_SortIn = 0;

				clasificadorStruct current_tSortRow_2_SortIn = null;

				for (int i_tSortRow_2_SortIn = 0; i_tSortRow_2_SortIn < array_tSortRow_2_SortIn.length; i_tSortRow_2_SortIn++) {
					current_tSortRow_2_SortIn = array_tSortRow_2_SortIn[i_tSortRow_2_SortIn];
					row7.presupuesto = current_tSortRow_2_SortIn.presupuesto;
					// increase number of line sorted
					nb_line_tSortRow_2_SortIn++;

					/**
					 * [tSortRow_2_SortIn begin ] stop
					 */

					/**
					 * [tSortRow_2_SortIn main ] start
					 */

					currentVirtualComponent = "tSortRow_2";

					currentComponent = "tSortRow_2_SortIn";

					tos_count_tSortRow_2_SortIn++;

					/**
					 * [tSortRow_2_SortIn main ] stop
					 */

					/**
					 * [tSortRow_2_SortIn process_data_begin ] start
					 */

					currentVirtualComponent = "tSortRow_2";

					currentComponent = "tSortRow_2_SortIn";

					/**
					 * [tSortRow_2_SortIn process_data_begin ] stop
					 */

					/**
					 * [tLogRow_3 main ] start
					 */

					currentComponent = "tLogRow_3";

					if (execStat) {
						runStat.updateStatOnConnection(iterateId, 1, 1, "row7");
					}

///////////////////////		

					String[] row_tLogRow_3 = new String[1];

					row_tLogRow_3[0] = FormatterUtils.formatUnwithE(row7.presupuesto);

					util_tLogRow_3.addRow(row_tLogRow_3);
					nb_line_tLogRow_3++;
//////

//////                    

///////////////////////    			

					row8 = row7;

					tos_count_tLogRow_3++;

					/**
					 * [tLogRow_3 main ] stop
					 */

					/**
					 * [tLogRow_3 process_data_begin ] start
					 */

					currentComponent = "tLogRow_3";

					/**
					 * [tLogRow_3 process_data_begin ] stop
					 */

					/**
					 * [tFileOutputDelimited_2 main ] start
					 */

					currentComponent = "tFileOutputDelimited_2";

					if (execStat) {
						runStat.updateStatOnConnection(iterateId, 1, 1, "row8");
					}

					StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
					sb_tFileOutputDelimited_2.append(row8.presupuesto);
					sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);

					nb_line_tFileOutputDelimited_2++;
					resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

					outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());

					tos_count_tFileOutputDelimited_2++;

					/**
					 * [tFileOutputDelimited_2 main ] stop
					 */

					/**
					 * [tFileOutputDelimited_2 process_data_begin ] start
					 */

					currentComponent = "tFileOutputDelimited_2";

					/**
					 * [tFileOutputDelimited_2 process_data_begin ] stop
					 */

					/**
					 * [tFileOutputDelimited_2 process_data_end ] start
					 */

					currentComponent = "tFileOutputDelimited_2";

					/**
					 * [tFileOutputDelimited_2 process_data_end ] stop
					 */

					/**
					 * [tLogRow_3 process_data_end ] start
					 */

					currentComponent = "tLogRow_3";

					/**
					 * [tLogRow_3 process_data_end ] stop
					 */

					/**
					 * [tSortRow_2_SortIn process_data_end ] start
					 */

					currentVirtualComponent = "tSortRow_2";

					currentComponent = "tSortRow_2_SortIn";

					/**
					 * [tSortRow_2_SortIn process_data_end ] stop
					 */

					/**
					 * [tSortRow_2_SortIn end ] start
					 */

					currentVirtualComponent = "tSortRow_2";

					currentComponent = "tSortRow_2_SortIn";

				}

				globalMap.put("tSortRow_2_SortIn_NB_LINE", nb_line_tSortRow_2_SortIn);

				ok_Hash.put("tSortRow_2_SortIn", true);
				end_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());

				/**
				 * [tSortRow_2_SortIn end ] stop
				 */

				/**
				 * [tLogRow_3 end ] start
				 */

				currentComponent = "tLogRow_3";

//////

				java.io.PrintStream consoleOut_tLogRow_3 = null;
				if (globalMap.get("tLogRow_CONSOLE") != null) {
					consoleOut_tLogRow_3 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
				} else {
					consoleOut_tLogRow_3 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
					globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_3);
				}

				consoleOut_tLogRow_3.println(util_tLogRow_3.format().toString());
				consoleOut_tLogRow_3.flush();
//////
				globalMap.put("tLogRow_3_NB_LINE", nb_line_tLogRow_3);

///////////////////////    			

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row7");
				}

				ok_Hash.put("tLogRow_3", true);
				end_Hash.put("tLogRow_3", System.currentTimeMillis());

				/**
				 * [tLogRow_3 end ] stop
				 */

				/**
				 * [tFileOutputDelimited_2 end ] start
				 */

				currentComponent = "tFileOutputDelimited_2";

				if (outtFileOutputDelimited_2 != null) {
					outtFileOutputDelimited_2.flush();
					outtFileOutputDelimited_2.close();
				}

				globalMap.put("tFileOutputDelimited_2_NB_LINE", nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME", fileName_tFileOutputDelimited_2);

				resourceMap.put("finish_tFileOutputDelimited_2", true);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row8");
				}

				ok_Hash.put("tFileOutputDelimited_2", true);
				end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());

				/**
				 * [tFileOutputDelimited_2 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			te.setVirtualComponentName(currentVirtualComponent);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tSortRow_2_SortIn"
			globalMap.remove("tSortRow_2");

			// free memory for "tSortRow_1_SortIn"
			globalMap.remove("tSortRow_1");

			try {

				/**
				 * [tDBInput_1 finally ] start
				 */

				currentComponent = "tDBInput_1";

				/**
				 * [tDBInput_1 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

				/**
				 * [tLogRow_1 finally ] start
				 */

				currentComponent = "tLogRow_1";

				/**
				 * [tLogRow_1 finally ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 finally ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (resourceMap.get("finish_tFileOutputDelimited_1") == null) {

					java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer) resourceMap
							.get("out_tFileOutputDelimited_1");
					if (outtFileOutputDelimited_1 != null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}

				}

				/**
				 * [tFileOutputDelimited_1 finally ] stop
				 */

				/**
				 * [tFilterRow_1 finally ] start
				 */

				currentComponent = "tFilterRow_1";

				/**
				 * [tFilterRow_1 finally ] stop
				 */

				/**
				 * [tSortRow_1_SortOut finally ] start
				 */

				currentVirtualComponent = "tSortRow_1";

				currentComponent = "tSortRow_1_SortOut";

				/**
				 * [tSortRow_1_SortOut finally ] stop
				 */

				/**
				 * [tSortRow_1_SortIn finally ] start
				 */

				currentVirtualComponent = "tSortRow_1";

				currentComponent = "tSortRow_1_SortIn";

				/**
				 * [tSortRow_1_SortIn finally ] stop
				 */

				/**
				 * [tSampleRow_1 finally ] start
				 */

				currentComponent = "tSampleRow_1";

				/**
				 * [tSampleRow_1 finally ] stop
				 */

				/**
				 * [tLogRow_2 finally ] start
				 */

				currentComponent = "tLogRow_2";

				/**
				 * [tLogRow_2 finally ] stop
				 */

				/**
				 * [tFileOutputJSON_1 finally ] start
				 */

				currentComponent = "tFileOutputJSON_1";

				/**
				 * [tFileOutputJSON_1 finally ] stop
				 */

				/**
				 * [tSortRow_2_SortOut finally ] start
				 */

				currentVirtualComponent = "tSortRow_2";

				currentComponent = "tSortRow_2_SortOut";

				/**
				 * [tSortRow_2_SortOut finally ] stop
				 */

				/**
				 * [tSortRow_2_SortIn finally ] start
				 */

				currentVirtualComponent = "tSortRow_2";

				currentComponent = "tSortRow_2_SortIn";

				/**
				 * [tSortRow_2_SortIn finally ] stop
				 */

				/**
				 * [tLogRow_3 finally ] start
				 */

				currentComponent = "tLogRow_3";

				/**
				 * [tLogRow_3 finally ] stop
				 */

				/**
				 * [tFileOutputDelimited_2 finally ] start
				 */

				currentComponent = "tFileOutputDelimited_2";

				if (resourceMap.get("finish_tFileOutputDelimited_2") == null) {

					java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer) resourceMap
							.get("out_tFileOutputDelimited_2");
					if (outtFileOutputDelimited_2 != null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}

				}

				/**
				 * [tFileOutputDelimited_2 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	private PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final lecturaCSV_CreditoMensual_2 lecturaCSV_CreditoMensual_2Class = new lecturaCSV_CreditoMensual_2();

		int exitCode = lecturaCSV_CreditoMensual_2Class.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}
		enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket can't open
				System.err.println("The statistics socket port " + portStats + " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = lecturaCSV_CreditoMensual_2.class.getClassLoader().getResourceAsStream(
					"dibasics/lecturacsv_creditomensual_2_0_1/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = lecturaCSV_CreditoMensual_2.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				// defaultProps is in order to keep the original context value
				if (context != null && context.isEmpty()) {
					defaultProps.load(inContext);
					context = new ContextProperties(defaultProps);
				}

				inContext.close();
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tDBInput_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tDBInput_1) {
			globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

			e_tDBInput_1.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory)
					+ " bytes memory increase when running : lecturaCSV_CreditoMensual_2");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;
		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {// for trunjob call
			final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 467180 characters generated by Talend Open Studio for ESB on the 16 de
 * febrero de 2023, 17:08:36 ART
 ************************************************************************************************/